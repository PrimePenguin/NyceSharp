// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.0.0.47. www.xsd2code.com
//    <NameSpace>NyceServiceModel.Transaction</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>NetCore</CodeBaseTag><InitializeFields>None</InitializeFields><GenerateUnusedComplexTypes>False</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>False</GenerateUnusedSimpleTypes><GenerateXMLAttributes>False</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>True</AutomaticProperties><PropNameSpecified>None</PropNameSpecified><PrivateFieldName>StartWithUnderscore</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>False</EnableExternalSchemasCache><EnableDebug>False</EnableDebug><EnableWarn>True</EnableWarn><ExcludeImportedTypes>False</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>True</CleanupCode><EnableXmlSerialization>False</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings></CustomUsings><AttributesToExlude></AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace NyceServiceModel.Transaction
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Xml;
    using System.Collections.Generic;
    using NyceSharp;


    [DebuggerStepThrough]
    public partial class NYCELOGIC
    {
        public Envelope Envelope { get; set; }
        public List<Transaction> Data { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class EnvelopePrerequisites
    {
        public List<string> MessageId { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TransactionTypeCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TransactionTypeCustomProperty
    {
        /// <summary>
        /// Represents an object of the TransactionType Business Logic Entity.
        /// </summary>
        public TransactionType TransactionType { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string TransactionType1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TransactionType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TransactionType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowManualProcessing requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowManualProcessing { get; set; }
        /// <summary>
        /// Represents an object of the TransactionTypeContext Business Logic Entity.
        /// </summary>
        public TransactionTypeContext Context { get; set; }
        public List<TransactionTypeCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the InventoryDateMode requisite.
        /// Keeps   enum values.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string InventoryDateMode { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Decribes client of the warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Client
    {
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address Address { get; set; }
        public List<ClientCurrency> ClientCurrencies { get; set; }
        public List<ClientCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Currency of the client.
        /// </summary>
        public ClientCurrency DefaultClientCurrency { get; set; }
        /// <summary>
        /// Type of the client. Defines operations set that are allowed for the particular client.
        /// </summary>
        public ClientType ClientType { get; set; }
        /// <summary>
        /// Defines if the current client operational. If not - it will not be visile in UI etc.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? IsActive { get; set; }
        /// <summary>
        /// Logo of the client.
        /// </summary>
        public ImageContainer LogoType { get; set; }
        /// <summary>
        /// Logo icon of the client.
        /// </summary>
        public ImageContainer IconLogoType { get; set; }
        /// <summary>
        /// Gets or sets the value of the VectorIconLogoType requisite.
        /// </summary>
        public string VectorIconLogoType { get; set; }
        public ClientGroups Groups { get; set; }
        public ClientWarehouses Warehouses { get; set; }
        /// <summary>
        /// ???
        /// </summary>
        public string PaymentInfo { get; set; }
        /// <summary>
        /// ???
        /// </summary>
        public string PaymentInfo1 { get; set; }
        /// <summary>
        /// ???
        /// </summary>
        public string PaymentInfo2 { get; set; }
        /// <summary>
        /// VAT number of the client company.
        /// </summary>
        public string VatNumber { get; set; }
        /// <summary>
        /// Registration number of the client company.
        /// </summary>
        public string CompanyRegistrationNumber { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address SecondaryAddress { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents address.
    /// Address should always have Owner. Generally it should not be an entity.
    /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Address
    {
        /// <summary>
        /// List of address lines. Usually contains street, building number etc.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList AddressLines { get; set; }
        /// <summary>
        /// City where the current address is located.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string City { get; set; }
        /// <summary>
        /// State where the current address is located
        /// This requisite is optional
        /// </summary>
        public string State { get; set; }
        public List<Contact> Contacts { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        /// <summary>
        /// Contains information about contact person.
        /// Contact should always have Address.
        /// We have to avoid produce new objects without Address and treat these cases like a bugs.
        /// </summary>
        public Contact MainContact { get; set; }
        /// <summary>
        /// Zip code of the address.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ZipCode { get; set; }
        /// <summary>
        /// Represents an object of the AddressType Business Logic Entity.
        /// </summary>
        public AddressType Type { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Owner_Carrier { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Owner_Client { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer Owner_Customer { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder Owner_CustomerOrder { get; set; }
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery Owner_CustomerOrderDelivery { get; set; }
        /// <summary>
        /// Contains head information about customer return.
        /// </summary>
        public CustomerReturn Owner_CustomerReturn { get; set; }
        /// <summary>
        /// Represents an object of the CustomerReturnDelivery Business Logic Entity.
        /// </summary>
        public CustomerReturnDelivery Owner_CustomerReturnDelivery { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay Owner_DeliveryWay { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseDelivery Business Logic Entity.
        /// </summary>
        public PurchaseDelivery Owner_PurchaseDelivery { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder Owner_PurchaseOrder { get; set; }
        /// <summary>
        /// Contains information about purchaser who works with some of suppliers.
        /// </summary>
        public Purchaser Owner_Purchaser { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseReturn Business Logic Entity.
        /// </summary>
        public PurchaseReturn Owner_PurchaseReturn { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseReturnDelivery Business Logic Entity.
        /// </summary>
        public PurchaseReturnDelivery Owner_PurchaseReturnDelivery { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan Owner_SalesMan { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Owner_Supplier { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Owner_Warehouse { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Type1 { get; set; }
        public string Owner_Carrier1 { get; set; }
        public string Owner_Client1 { get; set; }
        public string Owner_Customer1 { get; set; }
        public string Owner_CustomerOrder1 { get; set; }
        public string Owner_CustomerOrderDelivery1 { get; set; }
        public string Owner_CustomerReturn1 { get; set; }
        public string Owner_CustomerReturnDelivery1 { get; set; }
        public string Owner_DeliveryWay1 { get; set; }
        public string Owner_PurchaseDelivery1 { get; set; }
        public string Owner_PurchaseOrder1 { get; set; }
        public string Owner_Purchaser1 { get; set; }
        public string Owner_PurchaseReturn1 { get; set; }
        public string Owner_PurchaseReturnDelivery1 { get; set; }
        public string Owner_SalesMan1 { get; set; }
        public string Owner_Supplier1 { get; set; }
        public string Owner_Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class StringList
    {
        public List<string> String { get; set; }
    }
    
    /// <summary>
    /// Contains information about contact person.
    /// Contact should always have Address.
    /// We have to avoid produce new objects without Address and treat these cases like a bugs.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Contact
    {
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address Address { get; set; }
        /// <summary>
        /// Represents an object of the ContactType Business Logic Entity.
        /// </summary>
        public ContactType Type { get; set; }
        /// <summary>
        /// Email of the contact.
        /// </summary>
        public string EMail { get; set; }
        /// <summary>
        /// Fax number.
        /// </summary>
        public string FaxNumber { get; set; }
        /// <summary>
        /// Mobile phone number.
        /// </summary>
        public string MobilePhoneNumber { get; set; }
        /// <summary>
        /// Name of the contact.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Landline phone number.
        /// </summary>
        public string PhoneNumber { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Address1 { get; set; }
        public string Type1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ContactType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ContactType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class MultilingualText
    {
        public List<MultilingualTextValue> Value { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class MultilingualTextValue
    {
        public string Language { get; set; }
        public string Value { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the User Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class User
    {
        /// <summary>
        /// Represents an object of the UserType Business Logic Entity.
        /// </summary>
        public UserType Type { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Logical group of the clients. Used to perform operations for several clients at once (for instance picking).
        /// </summary>
        public ClientGroup ClientGroup { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsActive requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? IsActive { get; set; }
        /// <summary>
        /// Gets the value of the LastLoginDate requisite.
        /// </summary>
        public System.DateTime? LastLoginDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the Password requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Password { get; set; }
        /// <summary>
        /// Gets or sets the value of the WinLogin requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string WinLogin { get; set; }
        /// <summary>
        /// Gets or sets the value of the ClientApplicationTypes requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string ClientApplicationTypes { get; set; }
        public UserCustomers Customers { get; set; }
        public UserSuppliers Suppliers { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client DefaultClient { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse DefaultWarehouse { get; set; }
        /// <summary>
        /// Logical group of the clients. Used to perform operations for several clients at once (for instance picking).
        /// </summary>
        public ClientGroup DefaultClientGroup { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language DefaultLanguage { get; set; }
        /// <summary>
        /// Gets or sets the value of the PasswordExpireIn requisite.
        /// </summary>
        public string PasswordExpireIn { get; set; }
        /// <summary>
        /// Gets the value of the PasswordChangedOn requisite.
        /// </summary>
        public System.DateTime? PasswordChangedOn { get; set; }
        /// <summary>
        /// Contains information about contact person.
        /// Contact should always have Address.
        /// We have to avoid produce new objects without Address and treat these cases like a bugs.
        /// </summary>
        public Contact Contact { get; set; }
        public UserChildUsers ChildUsers { get; set; }
        /// <summary>
        /// Gets or sets the value of the BarCode requisite.
        /// </summary>
        public string BarCode { get; set; }
        public UserUserGroups UserGroups { get; set; }
        public UserUserRoles UserRoles { get; set; }
        /// <summary>
        /// Gets or sets the value of the ChangePasswordOnNextLogin requisite.
        /// </summary>
        public bool? ChangePasswordOnNextLogin { get; set; }
        public List<UserPassword> Passwords { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Type1 { get; set; }
        public string Client1 { get; set; }
        public string Warehouse1 { get; set; }
        public string ClientGroup1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Warehouse Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Warehouse
    {
        public WarehouseClients Clients { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address Address { get; set; }
        public List<StorageArea> StorageAreas { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class WarehouseClients
    {
        /// <summary>
        /// Clients that belong to the current group.
        /// </summary>
        public List<Client> Client { get; set; }
        /// <summary>
        /// Clients that belong to the current group.
        /// </summary>
        public List<ClientToWarehouse> ClientToWarehouse { get; set; }
    }
    
    /// <summary>
    /// Connects client with warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientToWarehouse
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the StorageArea Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class StorageArea
    {
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        public List<Aisle> Aisles { get; set; }
        public StorageAreaPoints Points { get; set; }
        public List<StorageAreaCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Aisle Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Aisle
    {
        /// <summary>
        /// Represents an object of the StorageArea Business Logic Entity.
        /// </summary>
        public StorageArea StorageArea { get; set; }
        public List<Section> Sections { get; set; }
        public AislePoints Points { get; set; }
        public List<AisleCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string StorageArea1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Section Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Section
    {
        /// <summary>
        /// Represents an object of the Aisle Business Logic Entity.
        /// </summary>
        public Aisle Aisle { get; set; }
        public List<Cell> Cells { get; set; }
        public SectionPoints Points { get; set; }
        public List<SectionCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Aisle1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Cell Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Cell
    {
        /// <summary>
        /// Represents an object of the Section Business Logic Entity.
        /// </summary>
        public Section Section { get; set; }
        /// <summary>
        /// Represents an object of the Level Business Logic Entity.
        /// </summary>
        public Level Level { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Gets or sets the value of the LocationMask requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='[Section.Aisle.StorageArea.Code][Section.Aisle.Code][Section.Code][Level.Code][Code]'
        /// </summary>
        public string LocationMask { get; set; }
        /// <summary>
        /// Represents an object of the ModuleType Business Logic Entity.
        /// </summary>
        public ModuleType ModuleType { get; set; }
        public CellPoints Points { get; set; }
        public List<CellCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Section1 { get; set; }
        public string Level1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Level Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Level
    {
        public List<LevelCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents an object of the Section Business Logic Entity.
        /// </summary>
        public Section Section { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Section1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LevelCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LevelCustomProperty
    {
        /// <summary>
        /// Represents an object of the Level Business Logic Entity.
        /// </summary>
        public Level Level { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Level1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Location Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Location
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Represents an object of the Aisle Business Logic Entity.
        /// </summary>
        public Aisle Aisle { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowDifferentItems requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowDifferentItems { get; set; }
        /// <summary>
        /// Gets or sets the value of the BarCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string BarCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the Checksum requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Checksum { get; set; }
        public List<LocationCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents an object of the Equipment Business Logic Entity.
        /// </summary>
        public Equipment Equipment { get; set; }
        public LocationErgonomicses Ergonomicses { get; set; }
        /// <summary>
        /// Gets or sets the value of the FillingFactor requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? FillingFactor { get; set; }
        /// <summary>
        /// Represents an object of the Frequency Business Logic Entity.
        /// </summary>
        public Frequency Frequency { get; set; }
        /// <summary>
        /// Represents an object of the Level Business Logic Entity.
        /// </summary>
        public Level Level { get; set; }
        /// <summary>
        /// Represents an object of the LocationSubtype Business Logic Entity.
        /// </summary>
        public LocationSubtype LocationSubtype { get; set; }
        /// <summary>
        /// Represents an object of the LocationType Business Logic Entity.
        /// </summary>
        public LocationType LocationType { get; set; }
        /// <summary>
        /// Gets or sets the value of the MaxNumberOfDifferentItems requisite.
        /// </summary>
        public string MaxNumberOfDifferentItems { get; set; }
        /// <summary>
        /// Represents an object of the ModuleType Business Logic Entity.
        /// </summary>
        public ModuleType ModuleType { get; set; }
        /// <summary>
        /// Gets or sets the value of the NoZeroInventoryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? NoZeroInventoryFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the NumberOfModules requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string NumberOfModules { get; set; }
        public List<LocationPickingZoneSortOrder> PickingZoneSortOrders { get; set; }
        /// <summary>
        /// Gets or sets the value of the Priority requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Priority { get; set; }
        /// <summary>
        /// Represents an object of the Section Business Logic Entity.
        /// </summary>
        public Section Section { get; set; }
        /// <summary>
        /// Represents an object of the StorageArea Business Logic Entity.
        /// </summary>
        public StorageArea StorageArea { get; set; }
        /// <summary>
        /// Gets or sets the value of the X requisite.
        /// </summary>
        public string X { get; set; }
        /// <summary>
        /// Gets or sets the value of the Y requisite.
        /// </summary>
        public string Y { get; set; }
        /// <summary>
        /// Gets or sets the value of the InventoryDate requisite.
        /// </summary>
        public System.DateTime? InventoryDate { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LocationCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LocationCustomProperty
    {
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Location1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Equipment Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Equipment
    {
        public List<EquipmentCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents an object of the EquipmentType Business Logic Entity.
        /// </summary>
        public EquipmentType EquipmentType { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsTemporary requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? IsTemporary { get; set; }
        public List<Location> Locations { get; set; }
        /// <summary>
        /// Represents an object of the EquipmentColor Business Logic Entity.
        /// </summary>
        public EquipmentColor Color { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentCustomProperty
    {
        /// <summary>
        /// Represents an object of the Equipment Business Logic Entity.
        /// </summary>
        public Equipment Equipment { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Equipment1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentType
    {
        /// <summary>
        /// Represents an object of the EquipmentCreationType Business Logic Entity.
        /// </summary>
        public EquipmentCreationType CreationType { get; set; }
        /// <summary>
        /// Represents an object of the EquipmentTemplate Business Logic Entity.
        /// </summary>
        public EquipmentTemplate EquipmentTemplate { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        public List<EquipmentTypeCustomProperty> CustomProperties { get; set; }
        public EquipmentTypeErgonomicses Ergonomicses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string CreationType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentCreationType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentCreationType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentTemplate Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentTemplate
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Gets or sets the value of the EquipmentMask requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='[WarehouseOrderNumber]-[SourceEquipmentTemplateCode]-[Date]'
        /// </summary>
        public string EquipmentMask { get; set; }
        /// <summary>
        /// Gets or sets the value of the LocationMask requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='[WarehouseOrderNumber]-[SourceLocationCode]-[Date]'
        /// </summary>
        public string LocationMask { get; set; }
        public EquipmentTemplateLocations Locations { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentTemplate Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentTemplateLocations
    {
        public List<Location> Location { get; set; }
        public List<EquipmentTemplateToLocation> EquipmentTemplateToLocation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentTemplateToLocation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentTemplateToLocation
    {
        /// <summary>
        /// Represents an object of the EquipmentTemplate Business Logic Entity.
        /// </summary>
        public EquipmentTemplate EquipmentTemplate { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string SortOrder { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about single item (good).
    /// </summary>
    [DebuggerStepThrough]
    public partial class Item
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Stock keeping unit. A unique identifier of the item.
        /// Normally the value of the requisite is autogenerated based on the item base
        /// and selected variant values for the current item.
        /// This requisite is mandatory.
        /// If the value is autogenerated it is formatted using the mask from the Item.SKUPattern setting.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Sku { get; set; }
        /// <summary>
        /// Defines if this item can be partial delivered or not.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        /// <summary>
        /// Shows the balance of the current item
        /// within picking zone flow specified in StockCountingPickingZoneFlowCode business setting.
        /// </summary>
        public decimal? Balance { get; set; }
        public List<ItemBarCode> BarCodes { get; set; }
        /// <summary>
        /// Special factor that allows to increase/decrease the volume during packing.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public decimal? BulkFactor { get; set; }
        /// <summary>
        /// Describes a commodity good.
        /// Used in conjunction with item.
        /// </summary>
        public Commodity Commodity { get; set; }
        /// <summary>
        /// Represents commodity group.
        /// Used in conjunction with item.
        /// </summary>
        public CommodityGroup CommodityGroup { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country CountryOfOrigin { get; set; }
        public List<ItemCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents an object of the ItemImage Business Logic Entity.
        /// </summary>
        public ItemImage DefaultImage { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit DefaultPurchaseUnit { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit DefaultSalesUnit { get; set; }
        /// <summary>
        /// Final date when the current item can be delivered.
        /// This requisite is mandatory.
        /// Its value is used in conjunction with customer order line's
        /// RequestedDeliveryDate reqisite value or current date if it is not set.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? EndDeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax EnvironmentalTax { get; set; }
        /// <summary>
        /// Represents an object of the FormatClass Business Logic Entity.
        /// </summary>
        public FormatClass FormatClass { get; set; }
        /// <summary>
        /// Represents an object of the Frequency Business Logic Entity.
        /// </summary>
        public Frequency Frequency { get; set; }
        /// <summary>
        /// Represents an object of the Handling Business Logic Entity.
        /// </summary>
        public Handling Handling { get; set; }
        /// <summary>
        /// Defines height of the item.
        /// This requisite is mandatory.
        /// It is measured in units specified in the corresponding RequisiteDimension.LinearSize setting.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Height { get; set; }
        public List<ItemImage> Images { get; set; }
        /// <summary>
        /// Sum of inbound allocations for this item
        /// </summary>
        public decimal? InboundAllocatedQuantity { get; set; }
        /// <summary>
        /// Represents an object of the InventoryGroup Business Logic Entity.
        /// </summary>
        public InventoryGroup InventoryGroup { get; set; }
        /// <summary>
        /// Defines if the inventory counting order should be created now.
        /// This requisite is mandatory.
        /// Used during import.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? InventoryNowFlag { get; set; }
        /// <summary>
        /// Defines if the goods with variable dimension and can't be measured exactly.
        /// In this case system allows working within predefined limits for deviations.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsVariableDimension { get; set; }
        /// <summary>
        /// Represents an object of the ItemBase Business Logic Entity.
        /// </summary>
        public ItemBase ItemBase { get; set; }
        public ItemItemGroups ItemGroups { get; set; }
        public List<ItemLocation> ItemLocations { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status ItemStatus { get; set; }
        /// <summary>
        /// Represents an object of the ItemStructure Business Logic Entity.
        /// </summary>
        public ItemStructure ItemStructure { get; set; }
        public ItemItemSubstitutions ItemSubstitutions { get; set; }
        /// <summary>
        /// Represents an object of the ItemValuationSubstitutionLookupMode Business Logic Entity.
        /// </summary>
        public ItemValuationSubstitutionLookupMode ItemValuationSubstitutionLookupMode { get; set; }
        /// <summary>
        /// Represents an object of the ItemTaxCode Business Logic Entity.
        /// </summary>
        public ItemTaxCode ItemTaxCode { get; set; }
        /// <summary>
        /// Represents an object of the ItemType Business Logic Entity.
        /// </summary>
        public ItemType ItemType { get; set; }
        public List<ItemUnit> ItemUnits { get; set; }
        /// <summary>
        /// Represents an object of the ItemValuationType Business Logic Entity.
        /// </summary>
        public ItemValuationType ItemValuationType { get; set; }
        /// <summary>
        /// Deprecated.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? LastUpdateDate { get; set; }
        /// <summary>
        /// Defines length of the item.
        /// This requisite is mandatory.
        /// It is measured in units specified in the corresponding RequisiteDimension.Weight setting.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Length { get; set; }
        public ItemLocations Locations { get; set; }
        /// <summary>
        /// Market suggested retail price.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? MarketSuggestedRetailPrice { get; set; }
        /// <summary>
        /// Date when next inbound delivery for this item is expected.
        /// </summary>
        public System.DateTime? NextDeliveryDate { get; set; }
        /// <summary>
        /// Sum of not delivered purchase order lines for this item.
        /// </summary>
        public decimal? OrderedQuantityToReceive { get; set; }
        /// <summary>
        /// Sum of outbound allocations for this item
        /// </summary>
        public decimal? OutboundAllocatedQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Shows the physical balance of the current item
        /// </summary>
        public decimal? PhysicalBalance { get; set; }
        /// <summary>
        /// Price excluding VAT tax for the item.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceExcludingVat { get; set; }
        /// <summary>
        /// Represents an object of the PriceItemGroup Business Logic Entity.
        /// </summary>
        public PriceItemGroup PriceGroup { get; set; }
        /// <summary>
        /// Quantity of the item in customer order lines suitable for processing.
        /// </summary>
        public decimal? QuantityInOrders { get; set; }
        /// <summary>
        /// Start date when item is relased and can be used by picking proposal.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ReleaseDate { get; set; }
        /// <summary>
        /// Number of items below which we need to reorder new items into warehouse.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? ReorderLevel { get; set; }
        /// <summary>
        /// Number of items below which replenishment is created to fill up the current item location.
        /// </summary>
        public decimal? ReplenishmentLevel { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit ReportingUnit { get; set; }
        /// <summary>
        /// Price used on purchase order line if no suitable supplier item code is found for it.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? StandardCost { get; set; }
        public List<SupplierItemCode> SupplierItemCodes { get; set; }
        /// <summary>
        /// Represents an object of the Unit Business Logic Entity.
        /// </summary>
        public Unit Unit { get; set; }
        public List<ItemVariant> Variants { get; set; }
        /// <summary>
        /// Volume of the item.
        /// This requisite is mandatory.
        /// It is measured in units specified in the corresponding RequisiteDimension.Volume setting.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Volume { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status WarehouseStatus { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit WarehouseUnit { get; set; }
        /// <summary>
        /// Weight of the item.
        /// This requisite is mandatory.
        /// It is measured in units specified in the corresponding RequisiteDimension.Weight setting.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Weight { get; set; }
        /// <summary>
        /// Width of the item.
        /// This requisite is mandatory.
        /// It is measured in units specified in the corresponding RequisiteDimension.LinearSize setting.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Width { get; set; }
        public ItemItemPropertyToOperations ItemPropertyToOperations { get; set; }
        /// <summary>
        /// If set to true the item is automatically included into delivery during packing.
        /// This requisite is mandatory.
        /// </summary>
        public bool? IsAutoDelivered { get; set; }
        /// <summary>
        /// Contains all variant names of the current item formatted into string.
        /// </summary>
        public MultilingualText VariantName { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public List<ItemText> Texts { get; set; }
        /// <summary>
        /// Gets or sets the value of the MinimumExpireDays requisite.
        /// </summary>
        public System.DateTime? MinimumExpireDays { get; set; }
        /// <summary>
        /// Gets or sets the value of the DefaultExpireDays requisite.
        /// </summary>
        public System.DateTime? DefaultExpireDays { get; set; }
        /// <summary>
        /// Gets or sets the value of the QuarantineDays requisite.
        /// </summary>
        public System.DateTime? QuarantineDays { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreezingTime requisite.
        /// </summary>
        public System.DateTime? FreezingTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the UnfreezingTime requisite.
        /// </summary>
        public System.DateTime? UnfreezingTime { get; set; }
        public List<ItemDocument> Documents { get; set; }
        /// <summary>
        /// Gets or sets the value of the ItemValuationOptions requisite.
        /// Keeps   enum values.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string ItemValuationOptions { get; set; }
        public ItemPickingZones PickingZones { get; set; }
        /// <summary>
        /// Defines if the check of linear dimensions must be skipped when fit goods in equipment bin.
        /// </summary>
        public bool? SkipDimensionChecksInFitBin { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Sku1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemBarCode Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemBarCode
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets or sets the value of the Value requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        /// <summary>
        /// Represents an object of the BarCodeType Business Logic Entity.
        /// </summary>
        public BarCodeType BarCodeType { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Value1 { get; set; }
        public string BarCodeType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the BarCodeType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class BarCodeType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Describes a commodity good.
    /// Used in conjunction with item.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Commodity
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains country definition.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Country
    {
        /// <summary>
        /// International ISO code.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string IsoCode { get; set; }
        /// <summary>
        /// Phone prefix assigned to the current country.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string PhonePrefix { get; set; }
        /// <summary>
        /// International short ISO code.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ShortIsoCode { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents commodity group.
    /// Used in conjunction with item.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CommodityGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemCustomProperty
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemImage Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemImage
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// System entity used to differentiate item images of the same item but of different kind.
        /// </summary>
        public ItemImageContext Context { get; set; }
        /// <summary>
        /// Gets the value of the Image requisite.
        /// </summary>
        public ImageContainer Image { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// System entity used to differentiate item images of the same item but of different kind.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemImageContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class ImageContainer
    {
        public ImageContainerRawImage RawImage { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class ImageContainerRawImage
    {
        public ImageContainerRawImageImageType ImageType { get; set; }
        public byte[] Value { get; set; }
    }
    
    public enum ImageContainerRawImageImageType
    {
        Icon,
        Image,
    }
    
    /// <summary>
    /// Represents an object of the ItemUnit Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemUnit
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the Unit Business Logic Entity.
        /// </summary>
        public Unit Unit { get; set; }
        /// <summary>
        /// Represents an object of the UnitType Business Logic Entity.
        /// </summary>
        public UnitType UnitType { get; set; }
        /// <summary>
        /// Gets the value of the Factor requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public decimal? Factor { get; set; }
        /// <summary>
        /// Gets or sets the value of the FactorDenominator requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string FactorDenominator { get; set; }
        /// <summary>
        /// Gets or sets the value of the FactorNominator requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string FactorNominator { get; set; }
        /// <summary>
        /// Represents an object of the ModuleType Business Logic Entity.
        /// </summary>
        public ModuleType ModuleType { get; set; }
        public ItemUnitContexts Contexts { get; set; }
        public List<ItemUnitToBarCode> BarCodes { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Unit1 { get; set; }
        public string UnitType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Unit Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Unit
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets the value of the Note requisite.
        /// </summary>
        public MultilingualText Note { get; set; }
        public UnitSourceUnits SourceUnits { get; set; }
        public UnitTargetUnits TargetUnits { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Unit Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UnitSourceUnits
    {
        public List<Unit> Unit { get; set; }
        public List<UnitToUnit> UnitToUnit { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UnitToUnit Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UnitToUnit
    {
        /// <summary>
        /// Represents an object of the Unit Business Logic Entity.
        /// </summary>
        public Unit SourceUnit { get; set; }
        /// <summary>
        /// Represents an object of the Unit Business Logic Entity.
        /// </summary>
        public Unit TargetUnit { get; set; }
        /// <summary>
        /// Gets or sets the value of the Factor requisite.
        /// 
        /// Mandatory
        /// </summary>
        public decimal? Factor { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string SourceUnit1 { get; set; }
        public string TargetUnit1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Unit Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UnitTargetUnits
    {
        public List<Unit> Unit { get; set; }
        public List<UnitToUnit> UnitToUnit { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UnitType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UnitType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ModuleType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ModuleType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public List<ModuleTypeCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the Height requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Height { get; set; }
        /// <summary>
        /// Gets or sets the value of the Length requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Length { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        public ModuleTypeSourceModuleType SourceModuleType { get; set; }
        public ModuleTypeTargetModuleType TargetModuleType { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Weight { get; set; }
        /// <summary>
        /// Gets or sets the value of the Width requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Width { get; set; }
        /// <summary>
        /// Defines maximum number of times current moduletype can be splittedinto smaller ones during picking proposal.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string MaxNumberOfSplits { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ModuleTypeCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ModuleTypeCustomProperty
    {
        /// <summary>
        /// Represents an object of the ModuleType Business Logic Entity.
        /// </summary>
        public ModuleType ModuleType { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ModuleType1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ModuleType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ModuleTypeSourceModuleType
    {
        public List<ModuleType> ModuleType { get; set; }
        public List<ModuleTypeToModuleType> ModuleTypeToModuleType { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ModuleTypeToModuleType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ModuleTypeToModuleType
    {
        /// <summary>
        /// Represents an object of the ModuleType Business Logic Entity.
        /// </summary>
        public ModuleType SourceModuleType { get; set; }
        /// <summary>
        /// Represents an object of the ModuleType Business Logic Entity.
        /// </summary>
        public ModuleType TargetModuleType { get; set; }
        /// <summary>
        /// Gets or sets the value of the Factor requisite.
        /// 
        /// Mandatory
        /// </summary>
        public decimal? Factor { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// </summary>
        public string SortOrder { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string SourceModuleType1 { get; set; }
        public string TargetModuleType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ModuleType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ModuleTypeTargetModuleType
    {
        public List<ModuleType> ModuleType { get; set; }
        public List<ModuleTypeToModuleType> ModuleTypeToModuleType { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemUnit Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemUnitContexts
    {
        public List<ItemUnitContext> ItemUnitContext { get; set; }
        public List<ItemUnitToContext> ItemUnitToContext { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemUnitContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemUnitContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemUnitToContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemUnitToContext
    {
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit ItemUnit { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnitContext Business Logic Entity.
        /// </summary>
        public ItemUnitContext Context { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemUnitToBarCode Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemUnitToBarCode
    {
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit ItemUnit { get; set; }
        /// <summary>
        /// Gets or sets the value of the BarCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string BarCode { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ItemUnit1 { get; set; }
        public string BarCode1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Tax Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Tax
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        /// <summary>
        /// Gets or sets the value of the TaxPercent requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? TaxPercent { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the FormatClass Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class FormatClass
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public List<FormatClassCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the Height requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Height { get; set; }
        /// <summary>
        /// Gets or sets the value of the Length requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Length { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Weight { get; set; }
        /// <summary>
        /// Gets or sets the value of the Width requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Width { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the FormatClassCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class FormatClassCustomProperty
    {
        /// <summary>
        /// Represents an object of the FormatClass Business Logic Entity.
        /// </summary>
        public FormatClass FormatClass { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string FormatClass1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Frequency Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Frequency
    {
        /// <summary>
        /// Gets or sets the value of the Factor requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string Factor { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsZeroFrequency requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsZeroFrequency { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Possible standard values:
        /// - 'A' = A
        /// - 'B' = B
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Handling Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Handling
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets the value of the Note requisite.
        /// </summary>
        public MultilingualText Note { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the InventoryGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class InventoryGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public List<InventoryGroupPickingZoneInventoryInterval> PickingZoneInventoryIntervals { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the InventoryGroupPickingZoneInventoryInterval Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class InventoryGroupPickingZoneInventoryInterval
    {
        /// <summary>
        /// Represents an object of the InventoryGroup Business Logic Entity.
        /// </summary>
        public InventoryGroup InventoryGroup { get; set; }
        /// <summary>
        /// Represents an object of the PickingZone Business Logic Entity.
        /// </summary>
        public PickingZone PickingZone { get; set; }
        /// <summary>
        /// Gets or sets the value of the InventoryInterval requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string InventoryInterval { get; set; }
        /// <summary>
        /// Gets or sets the value of the InventoryLevel requisite.
        /// </summary>
        public decimal? InventoryLevel { get; set; }
        /// <summary>
        /// Gets or sets the value of the MinimumInventoryInterval requisite.
        /// </summary>
        public string MinimumInventoryInterval { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string InventoryGroup1 { get; set; }
        public string PickingZone1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZone Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZone
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public List<PickingZoneCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the AutoSplitLoadCarrier requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AutoSplitLoadCarrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the AutoRemoveZeroItemLocation requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? AutoRemoveZeroItemLocation { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        public PickingZoneItemReplenishmentLevels ItemReplenishmentLevels { get; set; }
        public PickingZoneItems Items { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneCustomProperty
    {
        /// <summary>
        /// Represents an object of the PickingZone Business Logic Entity.
        /// </summary>
        public PickingZone PickingZone { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PickingZone1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZone Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneItemReplenishmentLevels
    {
        public List<ItemReplenishmentLevel> ItemReplenishmentLevel { get; set; }
        public List<ItemReplenishmentLevelToPickingZone> ItemReplenishmentLevelToPickingZone { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemReplenishmentLevel Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemReplenishmentLevel
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets or sets the value of the Level requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public decimal? Level { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the BizItemReplenishmentLevelToPickingZone Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemReplenishmentLevelToPickingZone
    {
        /// <summary>
        /// Represents an object of the ItemReplenishmentLevel Business Logic Entity.
        /// </summary>
        public ItemReplenishmentLevel ItemReplenishmentLevel { get; set; }
        /// <summary>
        /// Represents an object of the PickingZone Business Logic Entity.
        /// </summary>
        public PickingZone PickingZone { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZone Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneItems
    {
        public List<Item> Item { get; set; }
        public List<ItemToPickingZone> ItemToPickingZone { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemToPickingZone Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemToPickingZone
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the PickingZone Business Logic Entity.
        /// </summary>
        public PickingZone PickingZone { get; set; }
        /// <summary>
        /// Gets or sets the value of the ReplenishmentLevel requisite.
        /// </summary>
        public decimal? ReplenishmentLevel { get; set; }
        /// <summary>
        /// Gets or sets the value of the InventoryCountingLevel requisite.
        /// </summary>
        public decimal? InventoryCountingLevel { get; set; }
        /// <summary>
        /// Gets or sets the value of the LocationInventoryCountingLevel requisite.
        /// </summary>
        public decimal? LocationInventoryCountingLevel { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string PickingZone1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemBase Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemBase
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public ItemBaseContexts Contexts { get; set; }
        public List<Item> Items { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// </summary>
        public string SortOrder { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemBase Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemBaseContexts
    {
        public List<VariantContext> VariantContext { get; set; }
        public List<ItemBaseToVariantContext> ItemBaseToVariantContext { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the VariantContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class VariantContext
    {
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemBaseToVariantContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemBaseToVariantContext
    {
        /// <summary>
        /// Represents an object of the ItemBase Business Logic Entity.
        /// </summary>
        public ItemBase ItemBase { get; set; }
        /// <summary>
        /// Represents an object of the VariantContext Business Logic Entity.
        /// </summary>
        public VariantContext VariantContext { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ItemBase1 { get; set; }
        public string VariantContext1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about single item (good).
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemItemGroups
    {
        public List<ItemGroup> ItemGroup { get; set; }
        public List<ItemToItemGroup> ItemToItemGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the ItemGroupContext Business Logic Entity.
        /// </summary>
        public ItemGroupContext ItemGroupContext { get; set; }
        public List<ItemGroupCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the MinimumExpireDays requisite.
        /// </summary>
        public System.DateTime? MinimumExpireDays { get; set; }
        /// <summary>
        /// Gets or sets the value of the DefaultExpireDays requisite.
        /// </summary>
        public System.DateTime? DefaultExpireDays { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string ItemGroupContext1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemGroupContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemGroupContext
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Level requisite.
        /// </summary>
        public string Level { get; set; }
        /// <summary>
        /// Represents an object of the ItemGroupContext Business Logic Entity.
        /// </summary>
        public ItemGroupContext Parent { get; set; }
        public List<ItemGroupContext> Children { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemGroupCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemGroupCustomProperty
    {
        /// <summary>
        /// Represents an object of the ItemGroup Business Logic Entity.
        /// </summary>
        public ItemGroup ItemGroup { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ItemGroup1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemToItemGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemToItemGroup
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemGroup Business Logic Entity.
        /// </summary>
        public ItemGroup ItemGroup { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string ItemGroup1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemLocation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemLocation
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        public List<Allocation> Allocations { get; set; }
        /// <summary>
        /// Gets or sets the value of the Balance requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Balance { get; set; }
        /// <summary>
        /// Gets or sets the value of the EndDeliveryDate requisite.
        /// </summary>
        public System.DateTime? EndDeliveryDate { get; set; }
        /// <summary>
        /// Gets the value of the InboundAllocatedQuantity requisite.
        /// This requisite is mandatory.
        /// </summary>
        public decimal? InboundAllocatedQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the InventoryDate requisite.
        /// </summary>
        public System.DateTime? InventoryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the InventoryNowFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? InventoryNowFlag { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status InventoryStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsViable requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? IsViable { get; set; }
        /// <summary>
        /// Gets or sets the value of the LatestInboundMovementDate requisite.
        /// </summary>
        public System.DateTime? LatestInboundMovementDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the LatestOutboundMovementDate requisite.
        /// </summary>
        public System.DateTime? LatestOutboundMovementDate { get; set; }
        /// <summary>
        /// Gets the value of the OutboundAllocatedQuantity requisite.
        /// This requisite is mandatory.
        /// </summary>
        public decimal? OutboundAllocatedQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the PlannedOutboundAllocatedQuantity requisite.
        /// </summary>
        public decimal? PlannedOutboundAllocatedQuantity { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Volume of the item.
        /// This requisite is mandatory.
        /// It is measured in units specified in the corresponding RequisiteDimension.Volume setting.
        /// </summary>
        public double? Volume { get; set; }
        /// <summary>
        /// Weight of the item.
        /// This requisite is mandatory.
        /// It is measured in units specified in the corresponding RequisiteDimension.Weight setting.
        /// </summary>
        public double? Weight { get; set; }
        /// <summary>
        /// Shown if the current object is candidate for removal check that is performed by ZeroItemLocationsWatcher.
        /// If set to true does not nessesary mean that the item location will be removed.
        /// It means only that it should be checked for the posibility to be removed.
        /// </summary>
        public bool? RemoveCandidate { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Item1 { get; set; }
        public string Location1 { get; set; }
        public string ItemFifo1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemFifo Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemFifo
    {
        /// <summary>
        /// Gets or sets the value of the BatchNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string BatchNumber { get; set; }
        public List<ItemFifoLog> Logs { get; set; }
        public List<ItemFifoCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the ExpirationDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ExpirationDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsBlocked requisite.
        /// </summary>
        public bool? IsBlocked { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsClearThroughCustoms requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsClearThroughCustoms { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Price { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the RegistrationDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RegistrationDate { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifoStatus Business Logic Entity.
        /// </summary>
        public ItemFifoStatus Status { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string BatchNumber1 { get; set; }
        public string ExpirationDate1 { get; set; }
        public string IsClearThroughCustoms1 { get; set; }
        public string Item1 { get; set; }
        public string ProductionDate1 { get; set; }
        public string RegistrationDate1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemFifoLog Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemFifoLog
    {
        /// <summary>
        /// Gets or sets the value of the BatchNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string BatchNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the ExpirationDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ExpirationDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsClearThroughCustoms requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? IsClearThroughCustoms { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Price { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the RegistrationDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RegistrationDate { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemFifoCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemFifoCustomProperty
    {
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ItemFifo1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemFifoStatus Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemFifoStatus
    {
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Possible standard values:
        /// - 'BLOCKED' = Blocked
        /// - 'QUARANTINE' = Quarantine
        /// - 'VIABLE' = Viable
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about some number of items on the particular location
    /// reserved by some other object for the future use.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Allocation
    {
        /// <summary>
        /// Number of the reserved items.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? AllocatedQuantity { get; set; }
        /// <summary>
        /// Represents an object of the AllocationType Business Logic Entity.
        /// </summary>
        public AllocationType AllocationType { get; set; }
        /// <summary>
        /// Represents an object of the ItemLocation Business Logic Entity.
        /// </summary>
        public ItemLocation ItemLocation { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine Object_CustomerReturnLine { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine Object_CustomerOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the NotificationLine Business Logic Entity.
        /// </summary>
        public NotificationLine Object_NotificationLine { get; set; }
        /// <summary>
        /// Represents an object of the ProductionOrderLine Business Logic Entity.
        /// </summary>
        public ProductionOrderLine Object_ProductionOrderLine { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine Object_PurchaseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine Object_WarehouseOrderLine { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the AllocationType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class AllocationType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadCarrier Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadCarrier
    {
        /// <summary>
        /// Gets or sets the value of the Code requisite,
        /// that is, the unique code of the current Business Logic Entity object.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        /// <summary>
        /// Gets or sets the value of the BarCode requisite.
        /// </summary>
        public string BarCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the BrokenFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? BrokenFlag { get; set; }
        public List<LoadCarrier> Children { get; set; }
        public List<LoadCarrierCustomProperty> CustomProperties { get; set; }
        public List<LoadCarrierItemLocationQuantity> ItemLocationQuantities { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier Parent { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location EquipmentBin { get; set; }
        /// <summary>
        /// Represents an object of the ModuleType Business Logic Entity.
        /// </summary>
        public ModuleType ModuleType { get; set; }
        /// <summary>
        /// Gets or sets the value of the WasItemsTaken requisite.
        /// </summary>
        public bool? WasItemsTaken { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadCarrierCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadCarrierCustomProperty
    {
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string LoadCarrier1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadCarrierItemLocationQuantity Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadCarrierItemLocationQuantity
    {
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Represents an object of the ItemLocation Business Logic Entity.
        /// </summary>
        public ItemLocation ItemLocation { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string LoadCarrier1 { get; set; }
        public string ItemLocation1 { get; set; }
        public string Unit1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Status Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Status
    {
        /// <summary>
        /// System entity used to differentiate objects of the same entity but of different kind.
        /// </summary>
        public Context Context { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Possible standard values:
        /// - 'ACTIVE' = Active
        /// - 'ACTIVE' = Active
        /// - 'APPROVED' = Approved
        /// - 'APPROVED' = Approved
        /// - 'BINNED' = Binned
        /// - 'BINNED' = Binned
        /// - 'BLOCKED' = Blocked
        /// - 'BLOCKED' = Blocked
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED' = Cancelled
        /// - 'CANCELLED_WAREHOUSE_ORDER_LINE_STATUS' = Cancelled
        /// - 'CLOSED' = Closed
        /// - 'CLOSED' = Closed
        /// - 'CLOSED' = Closed
        /// - 'CLOSED' = Closed
        /// - 'CLOSED' = Closed
        /// - 'CLOSED' = Closed
        /// - 'CLOSED' = Closed
        /// - 'CLOSED' = Closed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'COMPLETED' = Completed
        /// - 'DISABLED' = Disabled
        /// - 'DISPATCH' = Dispatch
        /// - 'DISPATCH' = Dispatch
        /// - 'ENABLED' = Enabled
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_DELIVERED' = Fully delivered
        /// - 'FULLY_PRODUCED' = Fully produced
        /// - 'FULLY_PRODUCED' = Fully produced
        /// - 'FULLY_RECEIVED' = Fully Received
        /// - 'FULLY_RECEIVED' = Fully Received
        /// - 'HOLD' = Hold
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'IN_PROGRESS' = In progress
        /// - 'INACTIVE' = Inactive
        /// - 'INACTIVE' = Inactive
        /// - 'INSPECTION_STATE' = Inspection state
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'INVOICED' = Invoiced
        /// - 'LOAD_CARRIER_QUARANTINE' = Quarantine
        /// - 'LOADED' = Loaded
        /// - 'NEW' = New
        /// - 'NEW' = New
        /// - 'NONE' = None
        /// - 'NORMAL_STATE' = Normal state
        /// - 'NOT_APPROVED' = Not Approved
        /// - 'NOT_APPROVED' = Not Approved
        /// - 'NOT_INVOICED' = Not Invoiced
        /// - 'NOT_PICKABLE' = Not pickable
        /// - 'NOT_PICKABLE' = Not pickable
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOT_STARTED' = Not started
        /// - 'NOTIFIED' = Notified
        /// - 'NOTIFIED' = Notified
        /// - 'NOTIFIED' = Notified
        /// - 'NOTIFIED' = Notified
        /// - 'NOTIFIED' = Notified
        /// - 'NOTIFIED' = Notified
        /// - 'NOTIFIED' = Notified
        /// - 'NOTIFIED' = Notified
        /// - 'OFFER' = Offer
        /// - 'OFFER' = Offer
        /// - 'OFFER' = Offer
        /// - 'ONLY_INBOUND' = Only Inbound
        /// - 'ONLY_OUTBOUND' = Only Outbound
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'ORDER_REGISTERED' = Order registered
        /// - 'PACKING' = Packing
        /// - 'PACKING' = Packing
        /// - 'PACKING' = Packing
        /// - 'PACKING' = Packing
        /// - 'PACKING' = Packing
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_DELIVERED' = Partially delivered
        /// - 'PARTIALLY_PRODUCED' = Partially produced
        /// - 'PARTIALLY_PRODUCED' = Partially produced
        /// - 'PARTIALLY_RECEIVED' = Partially Received
        /// - 'PARTIALLY_RECEIVED' = Partially Received
        /// - 'PAUSED' = Paused
        /// - 'PAUSED' = Paused
        /// - 'PENDING' = Pending
        /// - 'PENDING' = Pending
        /// - 'PICKING' = Picking
        /// - 'PICKING' = Picking
        /// - 'PICKING' = Picking
        /// - 'PICKING' = Picking
        /// - 'PICKING' = Picking
        /// - 'PLACED_ON_LOADING_LOCATION' = Placed on loading location
        /// - 'PLANNED_FOR_LOADING' = Planned for loading
        /// - 'PLANNING' = Planning
        /// - 'PLANNING' = Planning
        /// - 'PLANNING' = Planning
        /// - 'PROCESSING' = Processing
        /// - 'PROCESSING' = Processing
        /// - 'PRODUCTION' = Production
        /// - 'PRODUCTION' = Production
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PROPOSAL' = Proposal
        /// - 'PUT_AWAY' = Put Away
        /// - 'PUT_AWAY' = Put Away
        /// - 'PUTAWAY' = Putaway
        /// - 'PUTAWAY' = Putaway
        /// - 'PUTAWAY' = Putaway
        /// - 'QUARANTINE' = Quarantine
        /// - 'RECEIVED' = Received
        /// - 'RECEIVED' = Received
        /// - 'RECEIVED' = Received
        /// - 'RECEIVED' = Received
        /// - 'RECEIVED' = Received
        /// - 'RECEIVED' = Received
        /// - 'RECEIVED_AT_EXTERNAL_WAREHOUSE' = Received at external warehouse
        /// - 'RECEIVED_AT_EXTERNAL_WAREHOUSE' = Expidited to destination
        /// - 'REJECTED' = Rejected
        /// - 'REJECTED' = Rejected
        /// - 'RELEASED' = Released
        /// - 'SENT_LEVEL_1_EDI_STATUS' = Sent Level 1
        /// - 'SENT_LEVEL_2_EDI_STATUS' = Sent Level 2
        /// - 'SENT_LEVEL_3_EDI_STATUS' = Sent Level 3
        /// - 'SHIPPED' = Shipped
        /// - 'SR_AUTOCREATED' = Automatically created
        /// - 'SR_CANCELLED' = Cancelled
        /// - 'SR_DELIVERED' = Delivered
        /// - 'SR_EXPIDITED_TO_DESTINATION' = Expidited to destination
        /// - 'SR_IN_TRANSIT' = In transit
        /// - 'SR_NOTIFIED' = Notified
        /// - 'SR_READY_FOR_DISTRIBUTION' = Ready for distribution
        /// - 'SR_RECEIVED' = Received
        /// - 'SR_SHIPPED' = Shipped
        /// - 'SR_SORTED' = Sorted
        /// - 'UNPACKED' = Unpacked
        /// - 'UNPACKED' = Unpacked
        /// - 'UNPACKED' = Unpacked
        /// - 'UNPACKED' = Unpacked
        /// - 'UNPACKING' = Unpacking
        /// - 'UNPACKING' = Unpacking
        /// - 'UNPACKING' = Unpacking
        /// - 'UNPACKING' = Unpacking
        /// - 'VIABLE' = Viable
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// System entity used to differentiate objects of the same entity but of different kind.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Context
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about each returned position under corresponding customer return.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLine
    {
        /// <summary>
        /// Contains head information about customer return.
        /// </summary>
        public CustomerReturn CustomerReturn { get; set; }
        /// <summary>
        /// Positive integer that defines position of the line within order.
        /// This requisite is mandatory.
        /// Default position increment is 10.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Positive integer that defines subposition of the current line within its position.
        /// This requisite is mandatory.
        /// Default subposition increment is 10.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Defines if partial delivery is allowed on the source customer order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine OriginalCustomerOrderLine { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public List<CustomerReturnLineCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredQuantity requisite.
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority DeliveryPriority { get; set; }
        /// <summary>
        /// Gets or sets the value of the Discount requisite.
        /// This requisite is mandatory.
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Gets or sets the value of the DiscountPercent requisite.
        /// This requisite is mandatory.
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Represents an object of the DispositionLine Business Logic Entity.
        /// </summary>
        public DispositionLine DispositionLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the DueDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DueDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo Fifo { get; set; }
        /// <summary>
        /// Gets or sets the value of the GrossPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? GrossPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the InboundDeliveredQuantity requisite.
        /// </summary>
        public decimal? InboundDeliveredQuantity { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item OriginalItem { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item NewItem { get; set; }
        /// <summary>
        /// Gets the value of the OriginalItemDescription requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList OriginalItemDescription { get; set; }
        /// <summary>
        /// Gets the value of the NewItemDescription requisite.
        /// 
        /// Mandatory
        /// </summary>
        public StringList NewItemDescription { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Gets or sets the value of the MarketSuggestedRetailPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? MarketSuggestedRetailPrice { get; set; }
        /// <summary>
        /// Gets the value of the NetPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? NetPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderQuantity { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit OrderUnit { get; set; }
        /// <summary>
        /// Gets or sets the value of the OriginalQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OriginalQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the PriceExcludingVat requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceExcludingVat { get; set; }
        /// <summary>
        /// Gets or sets the value of the PriceIncludingVat requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceIncludingVat { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        public List<CustomerReturnLineReturnedQuantity> ReturnedQuantities { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax Tax { get; set; }
        public List<CustomerReturnLineText> Texts { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsAutoDelivered requisite.
        /// </summary>
        public bool? IsAutoDelivered { get; set; }
        /// <summary>
        /// Represents an object of the ReturnCause Business Logic Entity.
        /// </summary>
        public ReturnCause DefaultReturnCause { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturn1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains head information about customer return.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturn
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Unique number of the customer return.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax AdministrationFeeTax { get; set; }
        /// <summary>
        /// Defines if partial delivery was allowed on the corrsponding customer order.
        /// This requisite is basically a copy of the same requisite in customer order, at the monent when return was created.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public Currency Currency { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        public List<CustomerReturnCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer DeliveryCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryCustomerAddress { get; set; }
        /// <summary>
        /// Get name of the customer goods were delivered to.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string DeliveryCustomerName { get; set; }
        /// <summary>
        /// Delivery customer EDIFACT localization code.
        /// </summary>
        public string DeliveryCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Additional description of the delivery terms.
        /// </summary>
        public string DeliveryTermDescription { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Additional description of the  delivery way.
        /// </summary>
        public string DeliveryWayDescription { get; set; }
        /// <summary>
        /// Document code.
        /// </summary>
        public string DocumentCode { get; set; }
        /// <summary>
        /// Document number.
        /// </summary>
        public string DocumentNumber { get; set; }
        /// <summary>
        /// Due date for this return.
        /// </summary>
        public System.DateTime? DueDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Freight cost partial delivery.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax FreightCostTax { get; set; }
        /// <summary>
        /// Specifies if freight cost is paid by reciever of the goods.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightPaidByReceiverFlag { get; set; }
        /// <summary>
        /// Freight reference.
        /// </summary>
        public string FreightReference { get; set; }
        /// <summary>
        /// Handling fee.
        /// </summary>
        public decimal? HandlingFee { get; set; }
        /// <summary>
        /// Handling fee partial delivery flag.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? HandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax HandlingFeeTax { get; set; }
        /// <summary>
        /// Date when corresponding current order was imported via integration.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer InvoiceCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address InvoiceCustomerAddress { get; set; }
        /// <summary>
        /// Name of the invoice customer of the corresponding customer order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string InvoiceCustomerName { get; set; }
        /// <summary>
        /// Invoice customer EDIFACT localization code.
        /// </summary>
        public string InvoiceCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language Language { get; set; }
        /// <summary>
        /// Date when last delivery for the corresponding customer order was made.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        public List<CustomerReturnLine> Lines { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer OrderCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address OrderCustomerAddress { get; set; }
        /// <summary>
        /// Name of the corresponding order customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderCustomerName { get; set; }
        /// <summary>
        /// Order customer EDIFACT localization code.
        /// </summary>
        public string OrderCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Date when the corresponding customer order was made.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Text of the corresponding customer order.
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Our reference.
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Description of the payment terms for corresponding customer order.
        /// </summary>
        public string PaymentTermDescription { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority Priority { get; set; }
        /// <summary>
        /// Production date of the corresponding customer order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion Region { get; set; }
        /// <summary>
        /// Requested delivery date of the corrsponding customer order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan SalesMan { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Use administration fee.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseAdministrationFee { get; set; }
        /// <summary>
        /// Use freight cost.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseFreightCost { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Your reference.
        /// </summary>
        public string YourReference { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User OrderingUser { get; set; }
        public List<Address> Addresses { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Defines crossdocking operation.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CrossDocking
    {
        /// <summary>
        /// Type of the crossdocking.
        /// For exmple: direct, manual distrbution, chased, prepacked.
        /// </summary>
        public CrossDockingType Type { get; set; }
        /// <summary>
        /// Defines if crossdocking is mandatory or not. If set to true the corresponding item will be crossdocked;
        /// otherwise only items of the customer order lines having crossdocking with the corresponding crossdocking type will be crossdocked.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? Mandatory { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Type of the crossdocking.
    /// For exmple: direct, manual distrbution, chased, prepacked.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CrossDockingType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class Currency
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Describes order for the list of items made by some particular customer out of warehouse.
    /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
    /// Although it is used throughout entire outbound process including picking and packing.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrder
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Unique number of the customer order.
        /// The value of this requisite is autogenerated.
        /// Never set or update this requisites manually,
        /// it may lead to the violation of the unique constraints later.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax AdministrationFeeTax { get; set; }
        /// <summary>
        /// Determines if partial delivery is allowed for the current customer order.
        /// The value of this requisite overrules the corresponding counterpart of the customer order line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public Currency Currency { get; set; }
        public List<CustomerOrderCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer DeliveryCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryCustomerAddress { get; set; }
        /// <summary>
        /// Name of the customer who should receive the goods.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string DeliveryCustomerName { get; set; }
        /// <summary>
        /// EDIFACT localization code for delivery customer notifications.
        /// </summary>
        public string DeliveryCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Additional description of the delivery terms.
        /// </summary>
        public string DeliveryTermDescription { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Additional description of the  delivery way.
        /// </summary>
        public string DeliveryWayDescription { get; set; }
        /// <summary>
        /// Document code.
        /// </summary>
        public string DocumentCode { get; set; }
        /// <summary>
        /// Document number.
        /// </summary>
        public string DocumentNumber { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Defines if freight cost should be applied to subsequent deliveries.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax FreightCostTax { get; set; }
        /// <summary>
        /// Cost of freight.
        /// </summary>
        public decimal? FreightCost { get; set; }
        /// <summary>
        /// Specifies if freight cost is paid by reciever of the goods.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightPaidByReceiverFlag { get; set; }
        /// <summary>
        /// Will be used by supported TMS-systems to set reference on shipments.
        /// </summary>
        public string FreightReference { get; set; }
        /// <summary>
        /// Handling fee.
        /// </summary>
        public decimal? HandlingFee { get; set; }
        /// <summary>
        /// Defines if handling fee should be applied to subsequent deliveries.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? HandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax HandlingFeeTax { get; set; }
        /// <summary>
        /// Date when current order was imported via integration.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer InvoiceCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address InvoiceCustomerAddress { get; set; }
        /// <summary>
        /// Name of the invoice customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string InvoiceCustomerName { get; set; }
        /// <summary>
        /// EDIFACT localization code for invoice customer notifications.
        /// </summary>
        public string InvoiceCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Defines if deliveries are blocked for this order.
        /// If set to true picling proposal will not process this order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsDeliveryBlocked { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language Language { get; set; }
        /// <summary>
        /// Date when the last delivery was made.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        public List<CustomerOrderLine> Lines { get; set; }
        /// <summary>
        /// Amount of loading meters this order occupies.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer OrderCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address OrderCustomerAddress { get; set; }
        /// <summary>
        /// Name of the order customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderCustomerName { get; set; }
        /// <summary>
        /// EDIFACT localization code for order customer notifications.
        /// </summary>
        public string OrderCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Date the order has been made.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Reference of the order.
        /// </summary>
        public string OrderReference { get; set; }
        /// <summary>
        /// Some text associated with the current order.
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Our reference.
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Description of the payment terms.
        /// </summary>
        public string PaymentTermDescription { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority Priority { get; set; }
        /// <summary>
        /// Date when we must start processing the order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion Region { get; set; }
        /// <summary>
        /// Date when goods must be delivered to the customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan SalesMan { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Defines if administration fee should be applied or not.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseAdministrationFee { get; set; }
        /// <summary>
        /// Defines if freight cost should be applied or not.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseFreightCost { get; set; }
        /// <summary>
        /// Volume of the order.
        /// It is measured in units specified in the corresponding RequisiteDimension.Volume setting.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Weight of the order.
        /// It is measured in units specified in the corresponding RequisiteDimension.Weight setting.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Your reference.
        /// </summary>
        public string YourReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the RestOrderHandling requisite.
        /// </summary>
        public bool? RestOrderHandling { get; set; }
        /// <summary>
        /// Days during which customer accepts deliveries.
        /// </summary>
        public string DeliveryDays { get; set; }
        /// <summary>
        /// Entity used for testing purposes.
        /// </summary>
        public CustomerOrderCause Cause { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User OrderingUser { get; set; }
        public List<CustomerOrderText> Texts { get; set; }
        public CustomerOrderDeliveryWayOptions DeliveryWayOptions { get; set; }
        public List<Address> Addresses { get; set; }
        public List<CustomerOrderAmount> Amounts { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents the custom properties of the customer order.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderCustomProperty
    {
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrder1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about client's customer.
    /// Customer is the one who orders goods from warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Customer
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address Address { get; set; }
        /// <summary>
        /// Defines whether customer allows partial deliveries of the goods or not.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        public CustomerCarriers Carriers { get; set; }
        /// <summary>
        /// Compary registration number of the customer.
        /// </summary>
        public string CompanyRegistrationNumber { get; set; }
        public Currency Currency { get; set; }
        /// <summary>
        /// Categories of customers.
        /// </summary>
        public CustomerCategory CustomerCategory { get; set; }
        /// <summary>
        /// Represents an object of the CustomerStatus Business Logic Entity.
        /// </summary>
        public CustomerStatus CustomerStatus { get; set; }
        /// <summary>
        /// Represents an object of the CustomerTaxCode Business Logic Entity.
        /// </summary>
        public CustomerTaxCode CustomerTaxCode { get; set; }
        public List<CustomerCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Name of the delivery cusomer.
        /// </summary>
        public string DeliveryCustomerName { get; set; }
        /// <summary>
        /// Days during which customer accepts deliveries.
        /// 
        /// Mandatory, Default='127'
        /// </summary>
        public string DeliveryDays { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Document code.
        /// </summary>
        public string DocumentCode { get; set; }
        /// <summary>
        /// Document type information.
        /// </summary>
        public string DocumentTypeInformation { get; set; }
        /// <summary>
        /// EDIFACT localization number for this customer.
        /// </summary>
        public string EdiLocalizationNumber { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Represents an object of the ExternalWarehouseType Business Logic Entity.
        /// </summary>
        public ExternalWarehouseType ExternalWarehouseType { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse ExternalWarehouse { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location ExternalWarehouseLocation { get; set; }
        /// <summary>
        /// Defines if freight cost should be applied to subsequent deliveries.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Defines if handling fee should be applied to subsequent deliveries.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? HandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer InvoiceCustomer { get; set; }
        /// <summary>
        /// Shows if customs operations are connected to the current customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsCustomsFlag { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language Language { get; set; }
        /// <summary>
        /// Time it will take to deliver goods to this customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string LeadTimeOfDelivery { get; set; }
        /// <summary>
        /// Arbitrary information about our responsible contact/department etc.
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Customer pallet registration number.
        /// </summary>
        public string PalletRegistrationNumber { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PriceCustomerGroup Business Logic Entity.
        /// </summary>
        public PriceCustomerGroup PriceGroup { get; set; }
        /// <summary>
        /// Represents an object of the PriceList Business Logic Entity.
        /// </summary>
        public PriceList PriceList { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority Priority { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion Region { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan SalesMan { get; set; }
        /// <summary>
        /// Defines if freight cost should be applied
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseFreightCost { get; set; }
        /// <summary>
        /// Defines if handling fee should be applied.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseHandlingFee { get; set; }
        /// <summary>
        /// Customer's VAT number.
        /// </summary>
        public string VatNumber { get; set; }
        /// <summary>
        /// Some free text assosiated with the order.
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Will be used by supported TMS-systems to set reference on shipments.
        /// </summary>
        public string FreightReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the RestOrderHandling requisite.
        /// </summary>
        public bool? RestOrderHandling { get; set; }
        public CustomerCustomerGroups CustomerGroups { get; set; }
        public CustomerDeliveryWayOptions DeliveryWayOptions { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about client's customer.
    /// Customer is the one who orders goods from warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerCarriers
    {
        public List<Carrier> Carrier { get; set; }
        public List<CustomerToCarrier> CustomerToCarrier { get; set; }
    }
    
    /// <summary>
    /// Describes external carrier.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Carrier
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address Address { get; set; }
        public List<CarrierCustomProperty> CustomProperties { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents custom properties of the carrier.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CarrierCustomProperty
    {
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Carrier1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerToCarrier Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerToCarrier
    {
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer Customer { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the CarrierCustomerCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string CarrierCustomerCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightPaidByReceiverFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightPaidByReceiverFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the EdiLocalizationCode requisite.
        /// </summary>
        public string EdiLocalizationCode { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Carrier1 { get; set; }
        public string Customer1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Categories of customers.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerCategory
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerStatus Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerStatus
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerTaxCode Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerTaxCode
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents the custom properties of the client.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerCustomProperty
    {
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer Customer { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Customer1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryTerm Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryTerm
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        public List<DeliveryTermCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightPaidByReceiverFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightPaidByReceiverFlag { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryTermCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryTermCustomProperty
    {
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string DeliveryTerm1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWay Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWay
    {
        /// <summary>
        /// Gets or sets the value of the AutoEndOfShipment requisite.
        /// If property is set it overrides the value of setting 'Packing.AutoEndOfShipment'.
        /// </summary>
        public bool? AutoEndOfShipment { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the BusinessFlowName requisite.
        /// </summary>
        public string FreightCalculationBusinessFlowName { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the CarrierCustomerCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string CarrierCustomerCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the CarrierLabelType requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string CarrierLabelType { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        public List<DeliveryWayOption> DeliveryWayOptions { get; set; }
        public DeliveryWayDeliveryWays DeliveryWays { get; set; }
        /// <summary>
        /// Gets or sets the value of the DispatchHandling requisite.
        /// If setting DispatchHandling is enabled:
        /// a) requisite is not specified (NULL) - dispatch handling is allowed
        /// b) requisite has value 'True' - dispatch handling is allowed
        /// c) requisite has value 'False' - dispatch handling is not allowed
        /// </summary>
        public bool? DispatchHandling { get; set; }
        /// <summary>
        /// Gets or sets the value of the DocumentTypeInformation requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string DocumentTypeInformation { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightCost requisite.
        /// </summary>
        public double? FreightCost { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax FreightCostTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the OurReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OurReference { get; set; }
        public List<DeliveryWayPackingMaterialSortOrder> PackingMaterialSortOrders { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string SortOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the TrackAndTraceUrl requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string TrackAndTraceUrl { get; set; }
        /// <summary>
        /// Represents an object of the TransportManagementSystem Business Logic Entity.
        /// </summary>
        public TransportManagementSystem TransportManagementSystem { get; set; }
        /// <summary>
        /// Gets or sets the value of the UseCarrierAddress requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseCarrierAddress { get; set; }
        /// <summary>
        /// Gets or sets the value of the YourReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string YourReference { get; set; }
        public List<DeliveryWayCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Gets or sets the max weight.
        /// </summary>
        public decimal? MaxWeight { get; set; }
        public decimal? MaxLength { get; set; }
        public decimal? MaxWidth { get; set; }
        public decimal? MaxHeight { get; set; }
        public decimal? MaxVolume { get; set; }
        /// <summary>
        /// Mandatory, Default='False'
        /// </summary>
        public bool? ApplyDimensionLimits { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWayOption Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWayOption
    {
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Gets or sets the value of the CarrierLabelCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string CarrierLabelCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the CarrierLabelType requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string CarrierLabelType { get; set; }
        public DeliveryWayOptionCustomers Customers { get; set; }
        public DeliveryWayOptionCustomerOrders CustomerOrders { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string DeliveryWay1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWayOption Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWayOptionCustomers
    {
        public List<Customer> Customer { get; set; }
        public List<CustomerToDeliveryWayOption> CustomerToDeliveryWayOption { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerToDeliveryWayOption Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerToDeliveryWayOption
    {
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer Customer { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWayOption Business Logic Entity.
        /// </summary>
        public DeliveryWayOption DeliveryWayOption { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Customer1 { get; set; }
        public string DeliveryWayOption1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWayOption Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWayOptionCustomerOrders
    {
        public List<CustomerOrder> CustomerOrder { get; set; }
        public List<CustomerOrderToDeliveryWayOption> CustomerOrderToDeliveryWayOption { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderToDeliveryWayOption  Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderToDeliveryWayOption
    {
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWayOption Business Logic Entity.
        /// </summary>
        public DeliveryWayOption DeliveryWayOption { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrder1 { get; set; }
        public string DeliveryWayOption1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWay Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWayDeliveryWays
    {
        public List<DeliveryWay> DeliveryWay { get; set; }
        public List<DeliveryWayToDeliveryWay> DeliveryWayToDeliveryWay { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWayToDeliveryWay Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWayToDeliveryWay
    {
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay MainDeliveryWay { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWayPackingMaterialSortOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWayPackingMaterialSortOrder
    {
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Represents an object of the PackingMaterial Business Logic Entity.
        /// </summary>
        public PackingMaterial PackingMaterial { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string SortOrder { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PackingMaterial Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PackingMaterial
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public List<PackingMaterialCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the Height requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Height { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets or sets the value of the Length requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Length { get; set; }
        /// <summary>
        /// Gets or sets the value of the MaximumAllowedQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? MaximumAllowedQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the MaximumAllowedWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? MaximumAllowedWeight { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Weight { get; set; }
        /// <summary>
        /// Gets or sets the value of the Width requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? Width { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsShipmentReferenceDependent requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? IsShipmentReferenceDependent { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowUpdateVolume requisite.
        /// </summary>
        public bool? AllowUpdateVolume { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PackingMaterialCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PackingMaterialCustomProperty
    {
        /// <summary>
        /// Represents an object of the PackingMaterial Business Logic Entity.
        /// </summary>
        public PackingMaterial PackingMaterial { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PackingMaterial1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TransportManagementSystem Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TransportManagementSystem
    {
        /// <summary>
        /// Gets or sets the value of the BusinessFlowName requisite.
        /// </summary>
        public string BusinessFlowName { get; set; }
        /// <summary>
        /// Gets or sets the value of the BusinessFlowName requisite.
        /// </summary>
        public string EndOfShipmentBusinessFlowName { get; set; }
        /// <summary>
        /// Gets or sets the value of the CancelShipmentReferenceBusinessFlowName requisite.
        /// </summary>
        public string CancelShipmentReferenceBusinessFlowName { get; set; }
        /// <summary>
        /// Gets or sets the value of the CancelShipmentBusinessFlowName requisite.
        /// </summary>
        public string CancelShipmentBusinessFlowName { get; set; }
        public List<TransportManagementSystemCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TransportManagementSystemCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TransportManagementSystemCustomProperty
    {
        /// <summary>
        /// Represents an object of the TransportManagementSystem Business Logic Entity.
        /// </summary>
        public TransportManagementSystem TransportManagementSystem { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string TransportManagementSystem1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWayCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeliveryWayCustomProperty
    {
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string DeliveryWay1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ExternalWarehouseType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ExternalWarehouseType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Client requisite.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? IsAutomatic { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Language Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Language
    {
        /// <summary>
        /// Gets or sets the value of the CultureName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string CultureName { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShortIsoCode requisite.
        /// </summary>
        public string ShortIsoCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the NativeName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string NativeName { get; set; }
        /// <summary>
        /// Gets or sets the value of the UserInterfaceLanguage requisite.
        /// </summary>
        public bool? IsUserInterfaceLanguage { get; set; }
        /// <summary>
        /// Defines if this is the language multilingual strings can be stored in.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsSystem { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language SystemLanguage { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PaymentTerm Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PaymentTerm
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the BusinessFlowName requisite.
        /// </summary>
        public string BusinessFlowName { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        /// <summary>
        /// Gets or sets the value of the DueDays requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DueDays { get; set; }
        /// <summary>
        /// Gets or sets the value of the HandlingFee requisite.
        /// </summary>
        public double? HandlingFee { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax HandlingFeeTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the LedgerType requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string LedgerType { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Price { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax Tax { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PriceCustomerGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PriceCustomerGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PriceList Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PriceList
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        public Currency Currency { get; set; }
        /// <summary>
        /// Gets or sets the value of the EndDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? EndDate { get; set; }
        public List<PriceListLine> Lines { get; set; }
        /// <summary>
        /// Gets or sets the value of the StartDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? StartDate { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Country1 { get; set; }
        public string Currency1 { get; set; }
        public string StartDate1 { get; set; }
        public string EndDate1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PriceListLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PriceListLine
    {
        /// <summary>
        /// Represents an object of the PriceList Business Logic Entity.
        /// </summary>
        public PriceList PriceList { get; set; }
        /// <summary>
        /// Gets or sets the value of the Discount requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Gets or sets the value of the DiscountPercent requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Price { get; set; }
        public List<PriceListLineDiscount> PriceListLineDiscounts { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PriceList1 { get; set; }
        public string Item1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PriceListLineDiscounts Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PriceListLineDiscount
    {
        /// <summary>
        /// Represents an object of the PriceListLine Business Logic Entity.
        /// </summary>
        public PriceListLine PriceListLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the Discount requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Gets or sets the value of the DiscountPercent requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Price { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PriceListLine1 { get; set; }
        public string Quantity1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Priority Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Priority
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the PriorityType Business Logic Entity.
        /// </summary>
        public PriorityType Type { get; set; }
        /// <summary>
        /// Gets or sets the value of the InternalLeadTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string InternalLeadTime { get; set; }
        public string Priority1 { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShowInGui requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? ShowInGui { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Type1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PriorityType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PriorityType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// ??? If its is a geographycal region - why it is not connected to country
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerRegion
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SalesMan Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SalesMan
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address Address { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about client's customer.
    /// Customer is the one who orders goods from warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerCustomerGroups
    {
        public List<CustomerGroup> CustomerGroup { get; set; }
        public List<CustomerToCustomerGroup> CustomerToCustomerGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the CustomerGroupContext Business Logic Entity.
        /// </summary>
        public CustomerGroupContext Context { get; set; }
        public List<CustomerGroupCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerGroupContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerGroupContext
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the CustomerGroupContext Business Logic Entity.
        /// </summary>
        public CustomerGroupContext Parent { get; set; }
        public List<CustomerGroupContext> Children { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerGroupCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerGroupCustomProperty
    {
        /// <summary>
        /// Represents an object of the CustomerGroup Business Logic Entity.
        /// </summary>
        public CustomerGroup CustomerGroup { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerGroup1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerToCustomerGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerToCustomerGroup
    {
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer Customer { get; set; }
        /// <summary>
        /// Represents an object of the CustomerGroup Business Logic Entity.
        /// </summary>
        public CustomerGroup CustomerGroup { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Customer1 { get; set; }
        public string CustomerGroup1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about client's customer.
    /// Customer is the one who orders goods from warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerDeliveryWayOptions
    {
        public List<DeliveryWayOption> DeliveryWayOption { get; set; }
        public List<CustomerToDeliveryWayOption> CustomerToDeliveryWayOption { get; set; }
    }
    
    /// <summary>
    /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLine
    {
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        /// <summary>
        /// Positive integer that defines position of the line within order.
        /// This requisite is mandatory.
        /// Default position increment is 10.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Positive integer that defines subposition of the current line within its position.
        /// This requisite is mandatory.
        /// Default subposition increment is 10.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Determines if partial delivery is allowed for the current customer order line.
        /// Corresponding requisite in customer order overrules current one.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine OriginalLine { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public List<CustomerOrderLineCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Quantity of items that was delivered. Measures in item units defined in Unit requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority DeliveryPriority { get; set; }
        public List<CustomerOrderLineDelivery> DeliveryLines { get; set; }
        /// <summary>
        /// Discount used to calculate net price.
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Discount used to calculate net price.
        /// Specified in %.
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Represents an object of the DispositionLine Business Logic Entity.
        /// </summary>
        public DispositionLine DispositionLine { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo Fifo { get; set; }
        /// <summary>
        /// Gross price (price without discount) of the line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? GrossPrice { get; set; }
        /// <summary>
        /// System used requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? InboundDeliveredQuantity { get; set; }
        /// <summary>
        /// Defines if planning priority is set manually or not.
        /// </summary>
        public bool? IsPlanningPrioritySetManually { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Additional description of the ordered item.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList ItemDescription { get; set; }
        /// <summary>
        /// Date of the last delivery performed for this customer order line.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        /// <summary>
        /// Amount of loading meters occupied by this customer order line.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Market suggested retatil price
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? MarketSuggestedRetailPrice { get; set; }
        /// <summary>
        /// Net price (price with discount) of the line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? NetPrice { get; set; }
        /// <summary>
        /// Ordered quantity in OrderUnit of the current line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderQuantity { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit OrderUnit { get; set; }
        /// <summary>
        /// Quantity of the items ordered originally when the line was created. Measured in Unit item units.
        /// This requisite is mandatory. It is not used in calculations and kept for loggin reasons only.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OriginalQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Planning priority.
        /// </summary>
        public string PlanningPriority { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceExcludingVat { get; set; }
        /// <summary>
        /// Net price with VAT tax added.
        /// For the calculation system use the value of the Tax requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceIncludingVat { get; set; }
        /// <summary>
        /// The date when current order line must be processed.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Quantity of ordered items.
        /// Measured in Unit item units.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        public List<Reservation> Reservations { get; set; }
        /// <summary>
        /// Date when the current line must be delivered to customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax Tax { get; set; }
        public List<CustomerOrderLineText> Texts { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        /// <summary>
        /// Volume of the current line.
        /// It is measured in units specified in the correspondinf RequisiteDimension.Volume setting.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Weight of the current line.
        /// It is measured in units specified in the corresponding RequisiteDimension.Weight setting.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Defines if current line should be automatically delievered during delivery of its order.
        /// This requisite is mandatory.
        /// Lines marked with this requisite are not processed with proposal.
        /// </summary>
        public bool? IsAutoDelivered { get; set; }
        /// <summary>
        /// Entity used for testing purposes.
        /// </summary>
        public CustomerOrderCause Cause { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProposalFilter requisite.
        /// </summary>
        public string ProposalFilter { get; set; }
        /// <summary>
        /// The identifier of package for prepacked crossdocking.
        /// </summary>
        public string PackageIdentifier { get; set; }
        /// <summary>
        /// Shows the quantity in allocations already present for this line
        /// </summary>
        public decimal? QuantityInAllocations { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrder1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents the custom properties of the customer order line.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineCustomProperty
    {
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine CustomerOrderLine { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrderLine1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineDelivery
    {
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery CustomerOrderDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the Position requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Gets or sets the value of the Subposition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// The value of actual delivered quantity of items that were already packed.
        /// It doesn't take in account quantity of items for which PrintTALabel was performed
        /// as opposed to DeliveredQuantity requisite.
        /// </summary>
        public decimal? ActualDeliveredQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowPartialDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        public List<CustomerOrderLineDeliveryCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority DeliveryPriority { get; set; }
        /// <summary>
        /// Gets or sets the value of the Discount requisite.
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Gets or sets the value of the DiscountPercent requisite.
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Represents an object of the DispositionLine Business Logic Entity.
        /// </summary>
        public DispositionLine DispositionLine { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo Fifo { get; set; }
        /// <summary>
        /// Gets or sets the value of the GrossPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? GrossPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the InboundDeliveredQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? InboundDeliveredQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsPlanningPrioritySetManually requisite.
        /// </summary>
        public bool? IsPlanningPrioritySetManually { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets the value of the ItemDescription requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList ItemDescription { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Gets or sets the value of the MarketSuggestedRetailPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? MarketSuggestedRetailPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the NetPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? NetPrice { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine OrderLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderQuantity { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit OrderUnit { get; set; }
        /// <summary>
        /// Gets or sets the value of the OriginalQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OriginalQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the PriceExcludingVat requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceExcludingVat { get; set; }
        /// <summary>
        /// Gets or sets the value of the PriceIncludingVat requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceIncludingVat { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax Tax { get; set; }
        /// <summary>
        /// Gets or sets the value of the TaxCode requisite.
        /// </summary>
        public string TaxCode { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country TaxCountry { get; set; }
        /// <summary>
        /// Gets or sets the value of the TaxName requisite.
        /// </summary>
        public string TaxName { get; set; }
        /// <summary>
        /// Gets or sets the value of the TaxTaxPercent requisite.
        /// </summary>
        public decimal? TaxTaxPercent { get; set; }
        public List<CustomerOrderLineDeliveryText> Texts { get; set; }
        /// <summary>
        /// Gets or sets the value of the TotalDeliveredQuantity requisite.
        /// </summary>
        public decimal? TotalDeliveredQuantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        public CustomerOrderLineDeliveryItemPropertyValues ItemPropertyValues { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsAutoDelivered requisite.
        /// </summary>
        public bool? IsAutoDelivered { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        /// <summary>
        /// Entity used for testing purposes.
        /// </summary>
        public CustomerOrderCause Cause { get; set; }
        /// <summary>
        /// The value of temporary delivered quantity of items that were already packed.
        /// </summary>
        public decimal? TemporaryDeliveredQuantity { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrderDelivery1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains all information about delivery that was made to some particular client
    /// at the point of time when it was made.
    /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDelivery
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Unique number of the customer order delivery.
        /// The value of this requisite is autogenerated.
        /// Never set or update this requisites manually,
        /// it may lead to the violation of the unique constraints later.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Code of the administration fee tax.
        /// </summary>
        public string AdministrationFeeTaxCode { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country AdministrationFeeTaxCountry { get; set; }
        /// <summary>
        /// Name of the administration fee tax.
        /// </summary>
        public string AdministrationFeeTaxName { get; set; }
        /// <summary>
        /// Percentage of the administration fee tax.
        /// </summary>
        public decimal? AdministrationFeeTaxTaxPercent { get; set; }
        /// <summary>
        /// Determines if partial delivery was allowed for the related customer order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        public Currency Currency { get; set; }
        /// <summary>
        /// Code of the currency.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string CurrencyCode { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address CustomerOrderDeliveryCustomerAddress { get; set; }
        /// <summary>
        /// Name of the delivery customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string CustomerOrderDeliveryCustomerName { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address CustomerOrderInvoiceCustomerAddress { get; set; }
        /// <summary>
        /// Name of the invoice customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string CustomerOrderInvoiceCustomerName { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address CustomerOrderOrderCustomerAddress { get; set; }
        /// <summary>
        /// Name of the order customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string CustomerOrderOrderCustomerName { get; set; }
        public CustomerOrderDeliveryCustomerOrders CustomerOrders { get; set; }
        public List<CustomerOrderDeliveryCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryCustomerAddress { get; set; }
        /// <summary>
        /// Determines if partial delivery was allowed for the related delivery customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? DeliveryCustomerAllowPartialDelivery { get; set; }
        /// <summary>
        /// Code of the delivery customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryCustomerCode { get; set; }
        /// <summary>
        /// Company registration number of the delivery customer.
        /// </summary>
        public string DeliveryCustomerCompanyRegistrationNumber { get; set; }
        public Currency DeliveryCustomerCurrency { get; set; }
        /// <summary>
        /// Categories of customers.
        /// </summary>
        public CustomerCategory DeliveryCustomerCustomerCategory { get; set; }
        /// <summary>
        /// Represents an object of the CustomerStatus Business Logic Entity.
        /// </summary>
        public CustomerStatus DeliveryCustomerCustomerStatus { get; set; }
        /// <summary>
        /// Represents an object of the CustomerTaxCode Business Logic Entity.
        /// </summary>
        public CustomerTaxCode DeliveryCustomerCustomerTaxCode { get; set; }
        /// <summary>
        /// Name of the delivery customer.
        /// </summary>
        public string DeliveryCustomerDeliveryCustomerName { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryCustomerDeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryCustomerDeliveryWay { get; set; }
        /// <summary>
        /// Document code of the delivery customer.
        /// </summary>
        public string DeliveryCustomerDocumentCode { get; set; }
        /// <summary>
        /// Document type information of the delivery customer.
        /// </summary>
        public string DeliveryCustomerDocumentTypeInformation { get; set; }
        /// <summary>
        /// EDIFACT localization number of delivery customer.
        /// </summary>
        public string DeliveryCustomerEdiLocalizationNumber { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status DeliveryCustomerEdiStatus { get; set; }
        /// <summary>
        /// Defines if freight cost is applied on subsequent deliveries.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? DeliveryCustomerFreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Defines if handling fee is applied on subsequent deliveries.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? DeliveryCustomerHandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer DeliveryCustomerInvoiceCustomer { get; set; }
        /// <summary>
        /// Shows if customs operations are connected to the delivery customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? DeliveryCustomerIsCustomsFlag { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language DeliveryCustomerLanguage { get; set; }
        /// <summary>
        /// Time it will take to deliver goods to the delivery customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryCustomerLeadTimeOfDelivery { get; set; }
        /// <summary>
        /// Name of the delivery customer.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryCustomerName { get; set; }
        /// <summary>
        /// EDIFACT localization code for delivery customer.
        /// </summary>
        public string DeliveryCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Our reference of the delivery customer.
        /// </summary>
        public string DeliveryCustomerOurReference { get; set; }
        /// <summary>
        /// Pallet registration number of delivery customer.
        /// </summary>
        public string DeliveryCustomerPalletRegistrationNumber { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm DeliveryCustomerPaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PriceCustomerGroup Business Logic Entity.
        /// </summary>
        public PriceCustomerGroup DeliveryCustomerPriceGroup { get; set; }
        /// <summary>
        /// Represents an object of the PriceList Business Logic Entity.
        /// </summary>
        public PriceList DeliveryCustomerPriceList { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority DeliveryCustomerPriority { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion DeliveryCustomerRegion { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan DeliveryCustomerSalesMan { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryCustomerUseFreightCost requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? DeliveryCustomerUseFreightCost { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryCustomerUseHandlingFee requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? DeliveryCustomerUseHandlingFee { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryCustomerVatNumber requisite.
        /// </summary>
        public string DeliveryCustomerVatNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryKeyCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryKeyCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryTermCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryTermCode { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country DeliveryTermCountry { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryTermDescription requisite.
        /// </summary>
        public string DeliveryTermDescription { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryTermFreightPaidByReceiverFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? DeliveryTermFreightPaidByReceiverFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryTermName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryTermName { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayBusinessFlowName requisite.
        /// </summary>
        public string DeliveryWayFreightCalculationBusinessFlowName { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier DeliveryWayCarrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayCarrierCustomerCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayCarrierCustomerCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayCarrierLabelType requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayCarrierLabelType { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayCode { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country DeliveryWayCountry { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayDescription requisite.
        /// </summary>
        public string DeliveryWayDescription { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayDocumentTypeInformation requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayDocumentTypeInformation { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayFreightCost requisite.
        /// </summary>
        public double? DeliveryWayFreightCost { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax DeliveryWayFreightCostTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayName { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayOurReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayOurReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWaySortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWaySortOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayTrackAndTraceUrl requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayTrackAndTraceUrl { get; set; }
        /// <summary>
        /// Represents an object of the TransportManagementSystem Business Logic Entity.
        /// </summary>
        public TransportManagementSystem DeliveryWayTransportManagementSystem { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayYourReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string DeliveryWayYourReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the DocumentCode requisite.
        /// </summary>
        public string DocumentCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the DocumentNumber requisite.
        /// </summary>
        public string DocumentNumber { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightCostPartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightCostTaxCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string FreightCostTaxCode { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country FreightCostTaxCountry { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightCostTaxName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string FreightCostTaxName { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightCostTaxTaxPercent requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public decimal? FreightCostTaxTaxPercent { get; set; }
        /// <summary>
        /// Cost of freight.
        /// </summary>
        public decimal? FreightCost { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightPaidByReceiverFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightPaidByReceiverFlag { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderDeliveryGroup Business Logic Entity.
        /// </summary>
        public CustomerOrderDeliveryGroup Group { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightReference requisite.
        /// </summary>
        public string FreightReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the HandlingFee requisite.
        /// </summary>
        public decimal? HandlingFee { get; set; }
        /// <summary>
        /// Gets or sets the value of the HandlingFeePartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? HandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax HandlingFeeTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the ImportDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address InvoiceCustomerAddress { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerAllowPartialDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? InvoiceCustomerAllowPartialDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string InvoiceCustomerCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerCompanyRegistrationNumber requisite.
        /// </summary>
        public string InvoiceCustomerCompanyRegistrationNumber { get; set; }
        public Currency InvoiceCustomerCurrency { get; set; }
        /// <summary>
        /// Categories of customers.
        /// </summary>
        public CustomerCategory InvoiceCustomerCustomerCategory { get; set; }
        /// <summary>
        /// Represents an object of the CustomerStatus Business Logic Entity.
        /// </summary>
        public CustomerStatus InvoiceCustomerCustomerStatus { get; set; }
        /// <summary>
        /// Represents an object of the CustomerTaxCode Business Logic Entity.
        /// </summary>
        public CustomerTaxCode InvoiceCustomerCustomerTaxCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerDeliveryCustomerName requisite.
        /// </summary>
        public string InvoiceCustomerDeliveryCustomerName { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm InvoiceCustomerDeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay InvoiceCustomerDeliveryWay { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerDocumentCode requisite.
        /// </summary>
        public string InvoiceCustomerDocumentCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerDocumentTypeInformation requisite.
        /// </summary>
        public string InvoiceCustomerDocumentTypeInformation { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerEdiLocalizationNumber requisite.
        /// </summary>
        public string InvoiceCustomerEdiLocalizationNumber { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status InvoiceCustomerEdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerFreightCostPartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? InvoiceCustomerFreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerHandlingFeePartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? InvoiceCustomerHandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer InvoiceCustomerInvoiceCustomer { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerIsCustomsFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? InvoiceCustomerIsCustomsFlag { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language InvoiceCustomerLanguage { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerLeadTimeOfDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string InvoiceCustomerLeadTimeOfDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string InvoiceCustomerName { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerNotificationEdiCode requisite.
        /// </summary>
        public string InvoiceCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerOurReference requisite.
        /// </summary>
        public string InvoiceCustomerOurReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerPalletRegistrationNumber requisite.
        /// </summary>
        public string InvoiceCustomerPalletRegistrationNumber { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm InvoiceCustomerPaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PriceCustomerGroup Business Logic Entity.
        /// </summary>
        public PriceCustomerGroup InvoiceCustomerPriceGroup { get; set; }
        /// <summary>
        /// Represents an object of the PriceList Business Logic Entity.
        /// </summary>
        public PriceList InvoiceCustomerPriceList { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority InvoiceCustomerPriority { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion InvoiceCustomerRegion { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan InvoiceCustomerSalesMan { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerUseFreightCost requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? InvoiceCustomerUseFreightCost { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerUseHandlingFee requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? InvoiceCustomerUseHandlingFee { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerVatNumber requisite.
        /// </summary>
        public string InvoiceCustomerVatNumber { get; set; }
        /// <summary>
        /// Gets number of CustomerOrderDeliveryBlocks for current delivery.
        /// </summary>
        public string BlockCount { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsDeliveryBlocked requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsDeliveryBlocked { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language Language { get; set; }
        /// <summary>
        /// Gets or sets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        public List<CustomerOrderLineDelivery> Lines { get; set; }
        public List<ShipmentReference> ShipmentReferences { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address OrderCustomerAddress { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerAllowPartialDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? OrderCustomerAllowPartialDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string OrderCustomerCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerCompanyRegistrationNumber requisite.
        /// </summary>
        public string OrderCustomerCompanyRegistrationNumber { get; set; }
        public Currency OrderCustomerCurrency { get; set; }
        /// <summary>
        /// Categories of customers.
        /// </summary>
        public CustomerCategory OrderCustomerCustomerCategory { get; set; }
        /// <summary>
        /// Represents an object of the CustomerStatus Business Logic Entity.
        /// </summary>
        public CustomerStatus OrderCustomerCustomerStatus { get; set; }
        /// <summary>
        /// Represents an object of the CustomerTaxCode Business Logic Entity.
        /// </summary>
        public CustomerTaxCode OrderCustomerCustomerTaxCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerDeliveryCustomerName requisite.
        /// </summary>
        public string OrderCustomerDeliveryCustomerName { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm OrderCustomerDeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay OrderCustomerDeliveryWay { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerDocumentCode requisite.
        /// </summary>
        public string OrderCustomerDocumentCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerDocumentTypeInformation requisite.
        /// </summary>
        public string OrderCustomerDocumentTypeInformation { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerEdiLocalizationNumber requisite.
        /// </summary>
        public string OrderCustomerEdiLocalizationNumber { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status OrderCustomerEdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerFreightCostPartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? OrderCustomerFreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerHandlingFeePartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? OrderCustomerHandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer OrderCustomerInvoiceCustomer { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerIsCustomsFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? OrderCustomerIsCustomsFlag { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language OrderCustomerLanguage { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerLeadTimeOfDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string OrderCustomerLeadTimeOfDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string OrderCustomerName { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerOurReference requisite.
        /// </summary>
        public string OrderCustomerOurReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerPalletRegistrationNumber requisite.
        /// </summary>
        public string OrderCustomerPalletRegistrationNumber { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm OrderCustomerPaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PriceCustomerGroup Business Logic Entity.
        /// </summary>
        public PriceCustomerGroup OrderCustomerPriceGroup { get; set; }
        /// <summary>
        /// Represents an object of the PriceList Business Logic Entity.
        /// </summary>
        public PriceList OrderCustomerPriceList { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority OrderCustomerPriority { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion OrderCustomerRegion { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan OrderCustomerSalesMan { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerUseFreightCost requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? OrderCustomerUseFreightCost { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerUseHandlingFee requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public bool? OrderCustomerUseHandlingFee { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerVatNumber requisite.
        /// </summary>
        public string OrderCustomerVatNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderReference requisite.
        /// </summary>
        public string OrderReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderText requisite.
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Gets or sets the value of the OurReference requisite.
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermBusinessFlowName requisite.
        /// </summary>
        public string PaymentTermBusinessFlowName { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string PaymentTermCode { get; set; }
        public List<CustomerOrderDeliveryToPackingMaterialQuantity> PackingMaterials { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country PaymentTermCountry { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermDescription requisite.
        /// </summary>
        public string PaymentTermDescription { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermDueDays requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string PaymentTermDueDays { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermHandlingFee requisite.
        /// </summary>
        public double? PaymentTermHandlingFee { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax PaymentTermHandlingFeeTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermLedgerType requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string PaymentTermLedgerType { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string PaymentTermName { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public decimal? PaymentTermPrice { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax PaymentTermTax { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the PlanningPriority requisite.
        /// </summary>
        public string PlanningPriority { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion Region { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan SalesMan { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShippingNoteNumber requisite.
        /// </summary>
        public string ShippingNoteNumber { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the UseAdministrationFee requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseAdministrationFee { get; set; }
        /// <summary>
        /// Gets or sets the value of the UseFreightCost requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseFreightCost { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        public CustomerOrderDeliveryWarehouseOrderGroups WarehouseOrderGroups { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Gets or sets the value of the YourReference requisite.
        /// </summary>
        public string YourReference { get; set; }
        /// <summary>
        /// Days during which customer accepts deliveries.
        /// </summary>
        public string DeliveryDays { get; set; }
        /// <summary>
        /// Entity used for testing purposes.
        /// </summary>
        public CustomerOrderCause Cause { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User OrderingUser { get; set; }
        public List<Address> Addresses { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains all information about delivery that was made to some particular client
    /// at the point of time when it was made.
    /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryCustomerOrders
    {
        public List<CustomerOrder> CustomerOrder { get; set; }
        public List<CustomerOrderDeliveryToCustomerOrder> CustomerOrderDeliveryToCustomerOrder { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderDeliveryToCustomerOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryToCustomerOrder
    {
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery CustomerOrderDelivery { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderDeliveryCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryCustomProperty
    {
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery CustomerOrderDelivery { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrderDelivery1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderDeliveryGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryGroup
    {
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Gets or sets the value of the GroupShippingNoteNumber requisite.
        /// </summary>
        public string GroupShippingNoteNumber { get; set; }
        public List<CustomerOrderDelivery> Orders { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReference Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReference
    {
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery CustomerOrderDelivery { get; set; }
        public List<CustomerOrderLineDeliveryQuantity> CustomerOrderDeliveryLineQuantities { get; set; }
        public List<ShipmentReferenceCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryInstruction1 requisite.
        /// </summary>
        public string DeliveryInstruction1 { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryInstruction2 requisite.
        /// </summary>
        public string DeliveryInstruction2 { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryInstruction3 requisite.
        /// </summary>
        public string DeliveryInstruction3 { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryInstruction4 requisite.
        /// </summary>
        public string DeliveryInstruction4 { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        public ShipmentReferenceDeliveryWayOptions DeliveryWayOptions { get; set; }
        public ShipmentReferenceDeviations Deviations { get; set; }
        /// <summary>
        /// Gets or sets the value of the GoodsMarking requisite.
        /// </summary>
        public string GoodsMarking { get; set; }
        /// <summary>
        /// Gets or sets the value of the Height requisite.
        /// </summary>
        public decimal? Height { get; set; }
        /// <summary>
        /// Gets or sets the value of the Length requisite.
        /// </summary>
        public decimal? Length { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Gets or sets the value of the NetWeight requisite.
        /// </summary>
        public decimal? NetWeight { get; set; }
        /// <summary>
        /// Gets or sets the value of the NumberOfPackages requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string NumberOfPackages { get; set; }
        /// <summary>
        /// Gets or sets the value of the NumberOfTags requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string NumberOfTags { get; set; }
        public List<ShipmentReferenceToPackingMaterialQuantity> PackingMaterials { get; set; }
        /// <summary>
        /// Gets or sets the value of the SequenceNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string SequenceNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the SequenceNumber2 requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string SequenceNumber2 { get; set; }
        /// <summary>
        /// Gets or sets the value of the SequenceNumberSSCC requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string SequenceNumberSSCC { get; set; }
        /// <summary>
        /// Gets or sets the value of the TypeOfGoods requisite.
        /// </summary>
        public string TypeOfGoods { get; set; }
        /// <summary>
        /// Gets or sets the value of the TypeOfPackage requisite.
        /// </summary>
        public string TypeOfPackage { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        public ShipmentReferenceWarehouseOrderGroups WarehouseOrderGroups { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Gets or sets the value of the Width requisite.
        /// </summary>
        public decimal? Width { get; set; }
        public string DeliveryKey { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        public List<ShipmentReferenceTracking> Tracking { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ParentShipmentReference { get; set; }
        public List<ShipmentReference> ShipmentReferences { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string SequenceNumberSSCC1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDeliveryQuantity Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineDeliveryQuantity
    {
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerOrderLineDelivery CustomerOrderLineDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReferenceCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceCustomProperty
    {
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ShipmentReference1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReference Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceDeliveryWayOptions
    {
        public List<DeliveryWayOption> DeliveryWayOption { get; set; }
        public List<ShipmentReferenceToDeliveryWayOption> ShipmentReferenceToDeliveryWayOption { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReferenceToDeliveryWayOption Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceToDeliveryWayOption
    {
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWayOption Business Logic Entity.
        /// </summary>
        public DeliveryWayOption DeliveryWayOption { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReference Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceDeviations
    {
        public List<Deviation> Deviation { get; set; }
        public List<ShipmentReferenceToDeviation> ShipmentReferenceToDeviation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Deviation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Deviation
    {
        /// <summary>
        /// Gets or sets the value of the Comments requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Comments { get; set; }
        public List<DeviationImage> Images { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the DeviationType Business Logic Entity.
        /// </summary>
        public DeviationType Type { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeviationImage Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeviationImage
    {
        /// <summary>
        /// Represents an object of the Deviation Business Logic Entity.
        /// </summary>
        public Deviation Deviation { get; set; }
        /// <summary>
        /// Gets the value of the Image requisite.
        /// </summary>
        public ImageContainer Image { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeviationType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DeviationType
    {
        /// <summary>
        /// System entity used to differentiate objects of the same entity but of different kind.
        /// </summary>
        public Context Context { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsHandlingAllowed requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsHandlingAllowed { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Possible standard values:
        /// - 'BAD_MARKING' = Bad marking
        /// - 'DAMAGED' = Damaged
        /// - 'DAMAGED' = Damaged
        /// - 'DELAYED_ITEM_DELIVERY_INTERVAL' = Delayed item delivery interval
        /// - 'MISSING_DOCUMENTS' = Missing documents
        /// - 'PREMATURE_ITEM_DELIVERY_INTERVAL' = Premature item delivery
        /// - 'UNKNOWN_ITEMS' = Unknown items
        /// - 'UNNOTIFIED' = Unnotified
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReferenceToDeviation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceToDeviation
    {
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Represents an object of the Deviation Business Logic Entity.
        /// </summary>
        public Deviation Deviation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DeliveryWayPackingMaterialSortOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceToPackingMaterialQuantity
    {
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Represents an object of the PackingMaterial Business Logic Entity.
        /// </summary>
        public PackingMaterial PackingMaterial { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReference Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceWarehouseOrderGroups
    {
        public List<WarehouseOrderGroup> WarehouseOrderGroup { get; set; }
        public List<ShipmentReferenceToWarehouseOrderGroup> ShipmentReferenceToWarehouseOrderGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderGroup
    {
        /// <summary>
        /// Gets or sets the value of the Code requisite.
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public List<WarehouseOrder> Orders { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrder
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User CreatedByUser { get; set; }
        /// <summary>
        /// Gets or sets the value of the CreationDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? CreationDate { get; set; }
        public List<WarehouseOrderCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the BarCode requisite.
        /// </summary>
        public string BarCode { get; set; }
        /// <summary>
        /// Gets the value of the Description requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList Description { get; set; }
        /// <summary>
        /// Represents an object of the Equipment Business Logic Entity.
        /// </summary>
        public Equipment Equipment { get; set; }
        public WarehouseOrderEquipmentTypes EquipmentTypes { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderGroup Business Logic Entity.
        /// </summary>
        public WarehouseOrderGroup Group { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsPlanningPrioritySetManually requisite.
        /// </summary>
        public bool? IsPlanningPrioritySetManually { get; set; }
        public List<WarehouseOrderLine> Lines { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        public WarehouseOrderMasterOrders MasterOrders { get; set; }
        /// <summary>
        /// Gets or sets the value of the OldSourceOrderVersion requisite.
        /// </summary>
        public string OldSourceOrderVersion { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneGroup Business Logic Entity.
        /// </summary>
        public PickingZoneGroup PickingZoneGroup { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Placement { get; set; }
        /// <summary>
        /// Gets or sets the value of the PlanningPriority requisite.
        /// </summary>
        public string PlanningPriority { get; set; }
        /// <summary>
        /// Gets or sets the value of the Priority requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location ReleasedLinesLocation { get; set; }
        public WarehouseOrderSlaveOrders SlaveOrders { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the OrderType Business Logic Entity.
        /// </summary>
        public OrderType SubType { get; set; }
        /// <summary>
        /// Represents an object of the OrderType Business Logic Entity.
        /// </summary>
        public OrderType Type { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Identifier of the picking proposal batch when current order was created.
        /// </summary>
        public string PickingProposalBatch { get; set; }
        /// <summary>
        /// Identifier of the picking proposal group if order was created in proposal.
        /// </summary>
        public string PickingProposalGroup { get; set; }
        /// <summary>
        /// Estimated time that is needed to process current order.
        /// </summary>
        public decimal? EstimatedOrderTime { get; set; }
        /// <summary>
        /// If 0 or 1 - this is unconsolidated line.
        /// </summary>
        public string ConsolidatedLinesCount { get; set; }
        /// <summary>
        /// Gets or sets value indicates whether paper report is printed for this order.
        /// </summary>
        public bool? IsPrinted { get; set; }
        /// <summary>
        /// Gets or sets the state of order processing in paper operation.
        /// </summary>
        public string PaperOperationState { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderCustomProperty
    {
        /// <summary>
        /// Represents an object of the WarehouseOrder Business Logic Entity.
        /// </summary>
        public WarehouseOrder WarehouseOrder { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string WarehouseOrder1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderEquipmentTypes
    {
        public List<EquipmentType> EquipmentType { get; set; }
        public List<WarehouseOrderToEquipmentType> WarehouseOrderToEquipmentType { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderToEquipmentType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderToEquipmentType
    {
        /// <summary>
        /// Represents an object of the WarehouseOrder Business Logic Entity.
        /// </summary>
        public WarehouseOrder WarehouseOrder { get; set; }
        /// <summary>
        /// Represents an object of the EquipmentType Business Logic Entity.
        /// </summary>
        public EquipmentType EquipmentType { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderLine
    {
        /// <summary>
        /// Represents an object of the WarehouseOrder Business Logic Entity.
        /// </summary>
        public WarehouseOrder WarehouseOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the Position requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Gets or sets the value of the Subposition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Gets or sets the value of the ActualQuantity requisite.
        /// </summary>
        public decimal? ActualQuantity { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseDirection Business Logic Entity.
        /// </summary>
        public WarehouseDirection Direction { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location EquipmentBin { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo Fifo { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item_Item { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier Item_LoadCarrier { get; set; }
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference Item_ShipmentReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Represents an object of the PickingZone Business Logic Entity.
        /// </summary>
        public PickingZone LocationGroup { get; set; }
        public WarehouseOrderLineMasterLines MasterLines { get; set; }
        public List<WarehouseOrderLineObject> Objects { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderedQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderedQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        public WarehouseOrderLineSlaveLines SlaveLines { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the OrderType Business Logic Entity.
        /// </summary>
        public OrderType Subtype { get; set; }
        /// <summary>
        /// Represents an object of the OrderType Business Logic Entity.
        /// </summary>
        public OrderType Type { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        /// <summary>
        /// Ordered quantity in Unit of the current line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? UnitQuantity { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine NextChasedPickingLine { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine OriginalLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the TemporaryPaperQuantity requisite.
        /// </summary>
        public decimal? TemporaryPaperQuantity { get; set; }
        /// <summary>
        /// If 0 or 1 - this is unconsolidated line.
        /// </summary>
        public string ConsolidationLevel { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location PackingLocation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string WarehouseOrder1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseDirection Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseDirection
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderLineMasterLines
    {
        public List<WarehouseOrderLine> WarehouseOrderLine { get; set; }
        public List<WarehouseOrderLineToWarehouseOrderLine> WarehouseOrderLineToWarehouseOrderLine { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderLineToWarehouseOrderLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderLineToWarehouseOrderLine
    {
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine SlaveLine { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine MasterLine { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderLineObject Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderLineObject
    {
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine WarehouseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerOrderLineDelivery Object_CustomerOrderLineDelivery { get; set; }
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine Object_CustomerReturnLine { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine Object_CustomerOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the NotificationLine Business Logic Entity.
        /// </summary>
        public NotificationLine Object_NotificationLine { get; set; }
        /// <summary>
        /// Represents an object of the ProductionOrderLine Business Logic Entity.
        /// </summary>
        public ProductionOrderLine Object_ProductionOrderLine { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine Object_PurchaseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine Object_WarehouseOrderLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderGroup Business Logic Entity.
        /// </summary>
        public WarehouseOrderGroup Group { get; set; }
        /// <summary>
        /// Indicates that value is locked for processing.
        /// </summary>
        public bool? Locked { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationLine
    {
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Gets or sets the value of the Position requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Gets or sets the value of the Subposition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryNoteNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string DeliveryNoteNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryNoteQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveryNoteQuantity { get; set; }
        public NotificationLineDeviations Deviations { get; set; }
        /// <summary>
        /// Gets or sets the value of the NotifiedQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? NotifiedQuantity { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine Object_CustomerOrderLine { get; set; }
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine Object_CustomerReturnLine { get; set; }
        /// <summary>
        /// Represents an object of the NotificationLine Business Logic Entity.
        /// </summary>
        public NotificationLine Object_NotificationLine { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine Object_PurchaseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine Object_WarehouseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference Object_ShipmentReference { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status State { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Notification1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Notification Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Notification
    {
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Gets or sets the value of the ActualTimeOfArrival requisite.
        /// </summary>
        public System.DateTime? ActualTimeOfArrival { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets the value of the Comments requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList Comments { get; set; }
        /// <summary>
        /// Gets or sets the value of the ContainerNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ContainerNumber { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public NotificationCustomerReturns CustomerReturns { get; set; }
        public List<NotificationCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DamagedQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DamagedQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the DamageReportCreated requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? DamageReportCreated { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredNumberOfItems requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredNumberOfItems { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredNumberOfPackages requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredNumberOfPackages { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredNumberOfPallets requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredNumberOfPallets { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredVolume { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredWeight { get; set; }
        /// <summary>
        /// Gets the value of the DeliveryNoteNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList DeliveryNoteNumber { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        public NotificationDeviations Deviations { get; set; }
        /// <summary>
        /// Gets or sets the value of the DutyFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? DutyFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the EstimatedTimeOfArrival requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? EstimatedTimeOfArrival { get; set; }
        /// <summary>
        /// Gets or sets the value of the EstimatedTimeOfDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? EstimatedTimeOfDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the GoodsNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string GoodsNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the IssuedBy requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string IssuedBy { get; set; }
        public List<NotificationLine> Lines { get; set; }
        public NotificationLocations Locations { get; set; }
        /// <summary>
        /// Gets or sets the value of the Marking requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Marking { get; set; }
        /// <summary>
        /// Gets or sets the value of the NotifiedNumberOfItems requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfItems { get; set; }
        /// <summary>
        /// Gets or sets the value of the NotifiedNumberOfPackages requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPackages { get; set; }
        /// <summary>
        /// Gets or sets the value of the NotifiedNumberOfPallets requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPallets { get; set; }
        /// <summary>
        /// Gets or sets the value of the NotifiedVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedVolume { get; set; }
        /// <summary>
        /// Gets or sets the value of the NotifiedWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedWeight { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderText requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the OrderType Business Logic Entity.
        /// </summary>
        public OrderType OrderType { get; set; }
        /// <summary>
        /// Contains information about contact person.
        /// Contact should always have Address.
        /// We have to avoid produce new objects without Address and treat these cases like a bugs.
        /// </summary>
        public Contact OurReference { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        public NotificationPurchaseOrders PurchaseOrders { get; set; }
        public NotificationResourceReservations ResourceReservations { get; set; }
        /// <summary>
        /// Gets or sets the value of the Sender requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Sender { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShipmentId requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ShipmentId { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status State { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the VehicleNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string VehicleNumber { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Contains information about contact person.
        /// Contact should always have Address.
        /// We have to avoid produce new objects without Address and treat these cases like a bugs.
        /// </summary>
        public Contact YourReference { get; set; }
        /// <summary>
        /// Specifies whether automatic creation of linking Purchase Order Lines is allowed on Notification form
        /// if user unpacks item that is not linked to current Notification order
        /// </summary>
        public bool? AllowAutomaticLinkingOfLines { get; set; }
        /// <summary>
        /// Specifies whether automatic creation of linking Purchase Orders is allowed on Notification form
        /// if user unpacks item that is not linked to current Notification order
        /// </summary>
        public bool? AllowAutomaticLinkingOfOrders { get; set; }
        /// <summary>
        /// Specifies whether automatic creation of Purchase Order Lines is allowed on Notification form
        /// if user unpacks item that is not linked to current Notification order and
        /// selected Purchase orders do not have line with unpacked item
        /// </summary>
        public bool? AllowAutomaticCreationOfPurchaseOrderLine { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Notification Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationCustomerReturns
    {
        public List<CustomerReturn> CustomerReturn { get; set; }
        public List<NotificationToCustomerReturn> NotificationToCustomerReturn { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationToCustomerReturn Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationToCustomerReturn
    {
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Contains head information about customer return.
        /// </summary>
        public CustomerReturn CustomerReturn { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationCustomProperty
    {
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Notification1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Notification Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationDeviations
    {
        public List<Deviation> Deviation { get; set; }
        public List<NotificationToDeviation> NotificationToDeviation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationToDeviation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationToDeviation
    {
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Represents an object of the Deviation Business Logic Entity.
        /// </summary>
        public Deviation Deviation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Notification Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationLocations
    {
        public List<Location> Location { get; set; }
        public List<NotificationToLocation> NotificationToLocation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationToLocation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationToLocation
    {
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the OrderType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class OrderType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// System entity used to differentiate objects of the same entity but of different kind.
        /// </summary>
        public Context Context { get; set; }
        /// <summary>
        /// Gets or sets the value of the ClientOrderType requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ClientOrderType { get; set; }
        public OrderTypeEquipmentTypes EquipmentTypes { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow LocationsSortingPickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the ItemPieceTime requisite.
        /// </summary>
        public decimal? ItemPieceTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderLineTime requisite.
        /// </summary>
        public decimal? OrderLineTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderTime requisite.
        /// </summary>
        public decimal? OrderTime { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the OrderType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class OrderTypeEquipmentTypes
    {
        public List<EquipmentType> EquipmentType { get; set; }
        public List<OrderTypeToEquipmentType> OrderTypeToEquipmentType { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the OrderTypeToEquipmentType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class OrderTypeToEquipmentType
    {
        /// <summary>
        /// Represents an object of the OrderType Business Logic Entity.
        /// </summary>
        public OrderType OrderType { get; set; }
        /// <summary>
        /// Represents an object of the EquipmentType Business Logic Entity.
        /// </summary>
        public EquipmentType EquipmentType { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlow Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlow
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        public List<PickingZoneFlowLine> Lines { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlowType Business Logic Entity.
        /// </summary>
        public PickingZoneFlowType Type { get; set; }
        public PickingZoneFlowEquipmentTypes EquipmentTypes { get; set; }
        public List<PickingZoneFlowCustomProperty> CustomProperties { get; set; }
        public PickingZoneFlowParentFlows ParentFlows { get; set; }
        public PickingZoneFlowChildFlows ChildFlows { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowLine
    {
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the PickingZone Business Logic Entity.
        /// </summary>
        public PickingZone PickingZone { get; set; }
        public List<PickingZoneFlowLineCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets the value of the LineDescription requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList LineDescription { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlowLineType Business Logic Entity.
        /// </summary>
        public PickingZoneFlowLineType PickingZoneFlowLineType { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneGroup Business Logic Entity.
        /// </summary>
        public PickingZoneGroup PickingZoneGroup { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneGroup Business Logic Entity.
        /// </summary>
        public PickingZoneGroup LogicPickingZoneGroup { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string SortOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortDescending requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? SortDescending { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowPickingOfFullLoadCarriersInBuffer requisite.
        /// This requisite is optional.
        /// </summary>
        public bool? AllowPickingOfFullLoadCarriersInBuffer { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PickingZoneFlow1 { get; set; }
        public string PickingZone1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowLineCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowLineCustomProperty
    {
        /// <summary>
        /// Represents an object of the PickingZoneFlowLine Business Logic Entity.
        /// </summary>
        public PickingZoneFlowLine PickingZoneFlowLine { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PickingZoneFlowLine1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowLineType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowLineType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public PickingZoneGroupMasterGroups MasterGroups { get; set; }
        public PickingZoneGroupSlaveGroups SlaveGroups { get; set; }
        public List<PickingZoneGroupCustomProperty> CustomProperties { get; set; }
        public PickingZoneGroupPickingZoneFlows PickingZoneFlows { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneGroupMasterGroups
    {
        public List<PickingZoneGroup> PickingZoneGroup { get; set; }
        public List<PickingZoneGroupToPickingZoneGroup> PickingZoneGroupToPickingZoneGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderLineToWarehouseOrderLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneGroupToPickingZoneGroup
    {
        /// <summary>
        /// Represents an object of the PickingZoneGroup Business Logic Entity.
        /// </summary>
        public PickingZoneGroup SlaveGroup { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneGroup Business Logic Entity.
        /// </summary>
        public PickingZoneGroup MasterGroup { get; set; }
        /// <summary>
        /// Gets or sets the value that indicates whether there is a forced relation between two picking zone groups
        /// (in case of forced chased picking).
        /// </summary>
        public bool? IsForced { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneGroupSlaveGroups
    {
        public List<PickingZoneGroup> PickingZoneGroup { get; set; }
        public List<PickingZoneGroupToPickingZoneGroup> PickingZoneGroupToPickingZoneGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneGroupCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneGroupCustomProperty
    {
        /// <summary>
        /// Represents an object of the PickingZoneGroup Business Logic Entity.
        /// </summary>
        public PickingZoneGroup PickingZoneGroup { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PickingZoneGroup1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneGroupPickingZoneFlows
    {
        public List<PickingZoneFlow> PickingZoneFlow { get; set; }
        public List<PickingZoneGroupToPickingZoneFlow> PickingZoneGroupToPickingZoneFlow { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneGroupToPickingZoneFlow Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneGroupToPickingZoneFlow
    {
        /// <summary>
        /// Represents an object of the PickingZoneGroup Business Logic Entity.
        /// </summary>
        public PickingZoneGroup PickingZoneGroup { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlowContext Business Logic Entity.
        /// </summary>
        public PickingZoneFlowContext Context { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlow Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowEquipmentTypes
    {
        public List<EquipmentType> EquipmentType { get; set; }
        public List<PickingZoneFlowToEquipmentType> PickingZoneFlowToEquipmentType { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowToEquipmentType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowToEquipmentType
    {
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the EquipmentType Business Logic Entity.
        /// </summary>
        public EquipmentType EquipmentType { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowCustomProperty
    {
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PickingZoneFlow1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlow Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowParentFlows
    {
        public List<PickingZoneFlow> PickingZoneFlow { get; set; }
        public List<PickingZoneFlowToPickingZoneFlow> PickingZoneFlowToPickingZoneFlow { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlowToPickingZoneFlow Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowToPickingZoneFlow
    {
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow ParentPickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow ChildPickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlowContext Business Logic Entity.
        /// </summary>
        public PickingZoneFlowContext Context { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PickingZoneFlow Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PickingZoneFlowChildFlows
    {
        public List<PickingZoneFlow> PickingZoneFlow { get; set; }
        public List<PickingZoneFlowToPickingZoneFlow> PickingZoneFlowToPickingZoneFlow { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Notification Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationPurchaseOrders
    {
        public List<PurchaseOrder> PurchaseOrder { get; set; }
        public List<NotificationToPurchaseOrder> NotificationToPurchaseOrder { get; set; }
    }
    
    /// <summary>
    /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
    /// It initiates the inbound process and is mainly used in unpacking and integration.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrder
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Unique number of the purchase order.
        /// The value of this requisite is autogenerated.
        /// Never set or update this requisites manually,
        /// it may lead to the violation of the unique constraints later.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public Currency Currency { get; set; }
        public List<PurchaseOrderCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Date when this purchase order was debited.
        /// </summary>
        public System.DateTime? DebitedDate { get; set; }
        /// <summary>
        /// Quantity of the delivered items for the current order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredItemsQuantity { get; set; }
        /// <summary>
        /// Quantity of the delivered packages for the current order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPackagesQuantity { get; set; }
        /// <summary>
        /// Quantity of the delivered pallets for the current order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPalletQuantity { get; set; }
        /// <summary>
        /// Volume of the delivered items for the current order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredVolume { get; set; }
        /// <summary>
        /// Weight of the delivered items for the current order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredWeight { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryAddress { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Defines if this purchase order contains duty goods or not.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? DutyFlag { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Date when the current order was imported through integration.
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Date when last delivery for this order was made.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        public List<PurchaseOrderLine> Lines { get; set; }
        /// <summary>
        /// Marking of the goods.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Marking { get; set; }
        /// <summary>
        /// Number of items inside this order warehouse was notified in advance.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfItems { get; set; }
        /// <summary>
        /// Number of packages inside this order warehouse was notified in advance.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPackages { get; set; }
        /// <summary>
        /// Number of pallets inside this order warehouse was notified in advance.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPallets { get; set; }
        /// <summary>
        /// Estimated volume of the current order warehouse was notified in advance.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedVolume { get; set; }
        /// <summary>
        /// Estimated weight of the current order warehouse was notified in advance.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedWeight { get; set; }
        /// <summary>
        /// Number of damaged units.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NumberOfDamagedUnits { get; set; }
        /// <summary>
        /// Date when current order was ordered.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Additional text description of the order.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseOrderType Business Logic Entity.
        /// </summary>
        public PurchaseOrderType OrderType { get; set; }
        /// <summary>
        /// Our reference.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Contains information about purchaser who works with some of suppliers.
        /// </summary>
        public Purchaser Purchaser { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseDelivery Business Logic Entity.
        /// </summary>
        public PurchaseDelivery ReferencedOrder_PurchaseDelivery { get; set; }
        /// <summary>
        /// Date when goods must be delivered to the warehouse.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Date when the good must be shipped.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ShipmentDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address SupplierAddress { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Your reference.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string YourReference { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseOrderPriority Business Logic Entity.
        /// </summary>
        public PurchaseOrderPriority Priority { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseOrderCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderCustomProperty
    {
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder PurchaseOrder { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseOrder1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderLine
    {
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder PurchaseOrder { get; set; }
        /// <summary>
        /// Positive integer that defines position of the line within order.
        /// This requisite is mandatory.
        /// Default position increment is 10.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Positive integer that defines subposition of the current line within its position.
        /// This requisite is mandatory.
        /// Default subposition increment is 10.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public Currency Currency { get; set; }
        public List<PurchaseOrderLineCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Date when notification about current line was received.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DateOfNotification { get; set; }
        /// <summary>
        /// Quantity of items that was delivered. Measures in item units defined in Unit requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Discount used to calculate net price.
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Discount used to calculate net price.
        /// Specified in %.
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Integration system requisite.
        /// </summary>
        public string EdiMessageId { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Gross price (price with discount) of the line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? GrossPrice { get; set; }
        /// <summary>
        /// Defines if this item is Duty or not.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsCustomsItem { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Date of the last inbound delivery for the current line.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        /// <summary>
        /// Additional description of the current line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList LineDescription { get; set; }
        /// <summary>
        /// Net price (price without discount) of the line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? NetPrice { get; set; }
        /// <summary>
        /// Total discount for all items of the current line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderDiscount { get; set; }
        /// <summary>
        /// Total discount for all items of the current line.
        /// Specified in %.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderDiscountPercent { get; set; }
        /// <summary>
        /// Gross price (price with discount) of the line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderGrossPrice { get; set; }
        /// <summary>
        /// Net price (price without discount) of the whole line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderNetPrice { get; set; }
        /// <summary>
        /// Ordered quantity in OrderUnit of the current line.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderQuantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit OrderUnit { get; set; }
        /// <summary>
        /// Quantity of the items ordered originally when the line was created. Measured in Unit item units.
        /// This requisite is mandatory. It is not used in calculations and kept for loggin reasons only.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OriginalQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Quantity of ordered items.
        /// Measured in Unit item units.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// The identifier of package for unpacking.
        /// During unpacking all purchase order lines with the same package identifier as scanned item
        /// value will be processed. New unpacked load carrier gets BarCode and Code = PackageIdentifier.
        /// </summary>
        public string PackageIdentifier { get; set; }
        /// <summary>
        /// Date when the current line must be delivered to warehouse.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Date when the current line must be shipped.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ShipmentDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Code of the item at supplier side.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string SupplierItemCode { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        public List<PurchaseOrderLineText> Texts { get; set; }
        /// <summary>
        /// Specifies that line is created automatically during unpacking
        /// </summary>
        public bool? AutoCreated { get; set; }
        public List<PurchaseOrderLineControl> Controls { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseOrder1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseOrderLineCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderLineCustomProperty
    {
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine PurchaseOrderLine { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseOrderLine1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents custom texts associated with the purchase order line.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderLineText
    {
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine PurchaseOrderLine { get; set; }
        /// <summary>
        /// Position of the text record among others.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string TextPosition { get; set; }
        /// <summary>
        /// Represents an object of the TextType Business Logic Entity.
        /// </summary>
        public TextType TextType { get; set; }
        /// <summary>
        /// Content of the customer order line text.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList TextLines { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseOrderLine1 { get; set; }
        public string TextPosition1 { get; set; }
        public string TextType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TextType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TextType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// System entity used to differentiate objects of the same entity but of different kind.
        /// </summary>
        public Context Context { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information for additional purchase order line handling in unpacking and blocking items.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderLineControl
    {
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine PurchaseOrderLine { get; set; }
        /// <summary>
        /// Defines type of control for additional purchase order line handling in unpacking and blocking items.
        /// </summary>
        public PurchaseOrderLineControlType ControlType { get; set; }
        /// <summary>
        /// Quantity of items that shoulw be delievered.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Quantity of items that was delivered.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the Comment requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Comment { get; set; }
        /// <summary>
        /// Defines if this item is Duty or not.
        /// </summary>
        public bool? IsBlocking { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseOrderLine1 { get; set; }
        public string ControlType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Defines type of control for additional purchase order line handling in unpacking and blocking items.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderLineControlType
    {
        /// <summary>
        /// Defines if this item is Duty or not.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsBlocking { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseOrderType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderType
    {
        public List<PurchaseOrderTypeCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the ItemPieceTime requisite.
        /// </summary>
        public string ItemPieceTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderLineTime requisite.
        /// </summary>
        public string OrderLineTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderTime requisite.
        /// </summary>
        public string OrderTime { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Possible standard values:
        /// - 'MONTAGE' = Montage
        /// - 'NORMAL' = Normal
        /// - 'RUSH' = Rush
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseOrderTypeCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderTypeCustomProperty
    {
        /// <summary>
        /// Represents an object of the PurchaseOrderType Business Logic Entity.
        /// </summary>
        public PurchaseOrderType PurchaseOrderType { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseOrderType1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about purchaser who works with some of suppliers.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Purchaser
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address Address { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseDelivery Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseDelivery
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        public Currency Currency { get; set; }
        public List<PurchaseDeliveryCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DebitedDate requisite.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? DebitedDate { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredItemsQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredItemsQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredPackagesQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPackagesQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredPalletQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPalletQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredVolume { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredWeight { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryAddress { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Gets or sets the value of the DutyFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? DutyFlag { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the ImportDate requisite.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        public List<PurchaseDeliveryLine> Lines { get; set; }
        /// <summary>
        /// Gets or sets the value of the Marking requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Marking { get; set; }
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfItems requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfItems { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfPackages requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPackages { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfPallets requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPallets { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedVolume { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedWeight { get; set; }
        /// <summary>
        /// Gets the value of the NumberOfDamagedUnits requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NumberOfDamagedUnits { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderText requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseOrderType Business Logic Entity.
        /// </summary>
        public PurchaseOrderType OrderType { get; set; }
        /// <summary>
        /// Gets or sets the value of the OurReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder PurchaseOrder { get; set; }
        /// <summary>
        /// Contains information about purchaser who works with some of suppliers.
        /// </summary>
        public Purchaser Purchaser { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShipmentDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ShipmentDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Gets or sets the value of the YourReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string YourReference { get; set; }
        public List<Address> Addresses { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseDeliveryCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseDeliveryCustomProperty
    {
        /// <summary>
        /// Represents an object of the PurchaseDelivery Business Logic Entity.
        /// </summary>
        public PurchaseDelivery PurchaseDelivery { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseDelivery1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseDeliveryLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseDeliveryLine
    {
        /// <summary>
        /// Represents an object of the PurchaseDelivery Business Logic Entity.
        /// </summary>
        public PurchaseDelivery PurchaseDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryNoteNumber requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string DeliveryNoteNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        /// <summary>
        /// Represents an object of the NotificationLine Business Logic Entity.
        /// </summary>
        public NotificationLine NotificationLine { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine PurchaseOrderLine { get; set; }
        public PurchaseDeliveryLineItemPropertyValues ItemPropertyValues { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseDeliveryLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseDeliveryLineItemPropertyValues
    {
        public List<ItemPropertyValue> ItemPropertyValue { get; set; }
        public List<PurchaseDeliveryLineToItemPropertyValue> PurchaseDeliveryLineToItemPropertyValue { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemPropertyValue Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemPropertyValue
    {
        /// <summary>
        /// Represents an object of the ItemProperty Business Logic Entity.
        /// </summary>
        public ItemProperty ItemProperty { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Gets or sets the value of the CreationDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? CreationDate { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine WarehouseOrderLine { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        /// <summary>
        /// Gets or sets the value of the Value requisite.
        /// </summary>
        public string Value { get; set; }
        /// <summary>
        /// Represents an object of the Operation Business Logic Entity.
        /// </summary>
        public Operation Operation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemProperty
    {
        /// <summary>
        /// Gets or sets the value of the RegularExpression requisite.
        /// This requisite is optional.
        /// </summary>
        public string RegularExpression { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Operation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Operation
    {
        /// <summary>
        /// Represents an object of the OperationContext Business Logic Entity.
        /// </summary>
        public OperationContext Context { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the OperationContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class OperationContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseDeliveryLineToItemPropertyValue Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseDeliveryLineToItemPropertyValue
    {
        /// <summary>
        /// Represents an object of the PurchaseDeliveryLine Business Logic Entity.
        /// </summary>
        public PurchaseDeliveryLine PurchaseDeliveryLine { get; set; }
        /// <summary>
        /// Represents an object of the ItemPropertyValue Business Logic Entity.
        /// </summary>
        public ItemPropertyValue ItemPropertyValue { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Supplier of the goods.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Supplier
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Company registration number.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string CompanyRegistrationNumber { get; set; }
        public Currency Currency { get; set; }
        public List<SupplierCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryDepartmentAddress { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language Language { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address OrderDepartmentAddress { get; set; }
        /// <summary>
        /// Our reference.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Days when it is possible to purchase from the current supplier.
        /// 
        /// Mandatory, Default='127'
        /// </summary>
        public string PurchaseDays { get; set; }
        /// <summary>
        /// How frequent we can make purchases from the current supplier.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string PurchaseInterval { get; set; }
        public SupplierPurchasers Purchasers { get; set; }
        /// <summary>
        /// Represents an object of the SupplierCategory Business Logic Entity.
        /// </summary>
        public SupplierCategory SupplierCategory { get; set; }
        /// <summary>
        /// Our customer number at the supplier.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string SupplierCustomerCode { get; set; }
        /// <summary>
        /// VAT umber of the supplier.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string VatNumber { get; set; }
        public List<SupplierWeekDeliveryTimes> WeekDeliveryTimes { get; set; }
        /// <summary>
        /// Your reference.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string YourReference { get; set; }
        public List<Address> Addresses { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SupplierCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SupplierCustomProperty
    {
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Supplier1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Supplier of the goods.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SupplierPurchasers
    {
        public List<Purchaser> Purchaser { get; set; }
        public List<SupplierToPurchaser> SupplierToPurchaser { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SupplierToPurchaser Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SupplierToPurchaser
    {
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        /// <summary>
        /// Contains information about purchaser who works with some of suppliers.
        /// </summary>
        public Purchaser Purchaser { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SupplierCategory Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SupplierCategory
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SupplierWeekDeliveryTimes Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SupplierWeekDeliveryTimes
    {
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        /// <summary>
        /// Represents an object of the DayOfWeek Business Logic Entity.
        /// </summary>
        public DayOfWeek DayOfWeek { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DeliveryTime { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DayOfWeek Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DayOfWeek
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseOrderPriority Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseOrderPriority
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the PriorityType Business Logic Entity.
        /// </summary>
        public PriorityType Type { get; set; }
        /// <summary>
        /// Gets or sets the value of the InternalLeadTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string InternalLeadTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the Priority requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShowInGui requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? ShowInGui { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Type1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationToPurchaseOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationToPurchaseOrder
    {
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder PurchaseOrder { get; set; }
        public List<NotificationToPurchaseOrderCustomProperty> CustomProperties { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationToPurchaseOrderCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationToPurchaseOrderCustomProperty
    {
        /// <summary>
        /// Represents an object of the NotificationToPurchaseOrder Business Logic Entity.
        /// </summary>
        public NotificationToPurchaseOrder NotificationToPurchaseOrder { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string NotificationToPurchaseOrder1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Notification Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationResourceReservations
    {
        public List<ResourceReservation> ResourceReservation { get; set; }
        public List<NotificationToResourceReservation> NotificationToResourceReservation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ResourceReservation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ResourceReservation
    {
        /// <summary>
        /// Gets or sets the value of the Comment requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Comment { get; set; }
        /// <summary>
        /// Gets or sets the value of the EndReservationDateTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? EndReservationDateTime { get; set; }
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine Object_CustomerReturnLine { get; set; }
        /// <summary>
        /// Represents an object of the Loading Business Logic Entity.
        /// </summary>
        public Loading Object_Loading { get; set; }
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Object_Notification { get; set; }
        /// <summary>
        /// Represents an object of the NotificationLine Business Logic Entity.
        /// </summary>
        public NotificationLine Object_NotificationLine { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine Object_PurchaseOrderLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the ObjectDescription requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ObjectDescription { get; set; }
        /// <summary>
        /// Represents an object of the Resource Business Logic Entity.
        /// </summary>
        public Resource Resource { get; set; }
        /// <summary>
        /// Gets or sets the value of the StartReservationDateTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? StartReservationDateTime { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Loading Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Loading
    {
        /// <summary>
        /// Gets or sets the value of the CreationTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? CreationTime { get; set; }
        /// <summary>
        /// Gets the value of the Description requisite.
        /// </summary>
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Gets or sets the value of the FinishTime requisite.
        /// </summary>
        public System.DateTime? FinishTime { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier ForwardingAgent { get; set; }
        /// <summary>
        /// Represents an object of the Resource Business Logic Entity.
        /// </summary>
        public Resource Gate { get; set; }
        public List<LoadingLine> Lines { get; set; }
        public List<LoadingLocation> LoadingLocations { get; set; }
        public LoadingProhibitedLoadCarriers ProhibitedLoadCarriers { get; set; }
        public LoadingResourceReservations ResourceReservations { get; set; }
        /// <summary>
        /// Gets or sets the value of the StartTime requisite.
        /// </summary>
        public System.DateTime? StartTime { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Gets or sets the value of the VehicleNumber requisite.
        /// </summary>
        public string VehicleNumber { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Resource Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Resource
    {
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Represents an object of the ResourceType Business Logic Entity.
        /// </summary>
        public ResourceType ResourceType { get; set; }
        public List<ResourceCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Warehouse1 { get; set; }
        public string ResourceType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ResourceType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ResourceType
    {
        /// <summary>
        /// Gets or sets the value of the IsBookable requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? IsBookable { get; set; }
        /// <summary>
        /// Gets or sets the value of the MaximumConcurrentBookings requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string MaximumConcurrentBookings { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ResourceCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ResourceCustomProperty
    {
        /// <summary>
        /// Represents an object of the Resource Business Logic Entity.
        /// </summary>
        public Resource Resource { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Resource1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadingLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingLine
    {
        /// <summary>
        /// Represents an object of the Loading Business Logic Entity.
        /// </summary>
        public Loading Loading { get; set; }
        /// <summary>
        /// Gets or sets the value of the ExecutionTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ExecutionTime { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadingLocation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingLocation
    {
        /// <summary>
        /// Represents an object of the Loading Business Logic Entity.
        /// </summary>
        public Loading Loading { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        public LoadingLocationWarehouseOrderGroups WarehouseOrderGroups { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Loading1 { get; set; }
        public string Location1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadingLocation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingLocationWarehouseOrderGroups
    {
        public List<WarehouseOrderGroup> WarehouseOrderGroup { get; set; }
        public List<LoadingLocationToWarehouseOrderGroup> LoadingLocationToWarehouseOrderGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadingLocationToWarehouseOrderGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingLocationToWarehouseOrderGroup
    {
        /// <summary>
        /// Represents an object of the LoadingLocation Business Logic Entity.
        /// </summary>
        public LoadingLocation LoadingLocation { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderGroup Business Logic Entity.
        /// </summary>
        public WarehouseOrderGroup WarehouseOrderGroup { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Loading Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingProhibitedLoadCarriers
    {
        public List<LoadCarrier> LoadCarrier { get; set; }
        public List<LoadingToLoadCarrier> LoadingToLoadCarrier { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadingToLoadCarrier Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingToLoadCarrier
    {
        /// <summary>
        /// Represents an object of the Loading Business Logic Entity.
        /// </summary>
        public Loading Loading { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Loading Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingResourceReservations
    {
        public List<ResourceReservation> ResourceReservation { get; set; }
        public List<LoadingToResourceReservation> LoadingToResourceReservation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LoadingToResourceReservation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LoadingToResourceReservation
    {
        /// <summary>
        /// Represents an object of the Loading Business Logic Entity.
        /// </summary>
        public Loading Loading { get; set; }
        /// <summary>
        /// Represents an object of the ResourceReservation Business Logic Entity.
        /// </summary>
        public ResourceReservation ResourceReservation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationToResourceReservation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationToResourceReservation
    {
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Notification { get; set; }
        /// <summary>
        /// Represents an object of the ResourceReservation Business Logic Entity.
        /// </summary>
        public ResourceReservation ResourceReservation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationLineDeviations
    {
        public List<Deviation> Deviation { get; set; }
        public List<NotificationLineToDeviation> NotificationLineToDeviation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the NotificationLineToDeviation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class NotificationLineToDeviation
    {
        /// <summary>
        /// Represents an object of the NotificationLine Business Logic Entity.
        /// </summary>
        public NotificationLine NotificationLine { get; set; }
        /// <summary>
        /// Represents an object of the Deviation Business Logic Entity.
        /// </summary>
        public Deviation Deviation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ProductionOrderLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ProductionOrderLine
    {
        /// <summary>
        /// Gets or sets the value of the ActualQuantity requisite.
        /// </summary>
        public decimal? ActualQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow InboundPickingZoneFlow { get; set; }
        /// <summary>
        /// Gets the value of the Instructions requisite.
        /// 
        /// Mandatory
        /// </summary>
        public StringList Instructions { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine Object_CustomerOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine Object_WarehouseOrderLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderQuantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit OrderUnit { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow OutboundPickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the Position requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Price { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Represents an object of the ProductionOrder Business Logic Entity.
        /// </summary>
        public ProductionOrder ProductionOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProposalFilter requisite.
        /// </summary>
        public string ProposalFilter { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Gets or sets the value of the Subposition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ProductionOrder1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ProductionOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ProductionOrder
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Gets the value of the Description requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList Description { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow InboundPickingZoneFlow { get; set; }
        /// <summary>
        /// Gets the value of the Instructions requisite.
        /// 
        /// Mandatory
        /// </summary>
        public StringList Instructions { get; set; }
        public List<ProductionOrderLine> Lines { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow OutboundPickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Price { get; set; }
        /// <summary>
        /// Gets or sets the value of the Priority requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Warehouse1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderLineSlaveLines
    {
        public List<WarehouseOrderLine> WarehouseOrderLine { get; set; }
        public List<WarehouseOrderLineToWarehouseOrderLine> WarehouseOrderLineToWarehouseOrderLine { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderMasterOrders
    {
        public List<WarehouseOrder> WarehouseOrder { get; set; }
        public List<WarehouseOrderToWarehouseOrder> WarehouseOrderToWarehouseOrder { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrderToWarehouseOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderToWarehouseOrder
    {
        /// <summary>
        /// Represents an object of the WarehouseOrder Business Logic Entity.
        /// </summary>
        public WarehouseOrder SlaveOrder { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrder Business Logic Entity.
        /// </summary>
        public WarehouseOrder MasterOrder { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the WarehouseOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class WarehouseOrderSlaveOrders
    {
        public List<WarehouseOrder> WarehouseOrder { get; set; }
        public List<WarehouseOrderToWarehouseOrder> WarehouseOrderToWarehouseOrder { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReferenceToWarehouseOrderGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceToWarehouseOrderGroup
    {
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderGroup Business Logic Entity.
        /// </summary>
        public WarehouseOrderGroup WarehouseOrderGroup { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ShipmentReference1 { get; set; }
        public string WarehouseOrderGroup1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReferenceTracking Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceTracking
    {
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Represents an object of the TrackingEvent Business Logic Entity.
        /// </summary>
        public TrackingEvent TrackingEvent { get; set; }
        /// <summary>
        /// Gets or sets the value of the Location requisite.
        /// </summary>
        public string Location { get; set; }
        /// <summary>
        /// Gets or sets the value of the EventDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? EventDate { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country Country { get; set; }
        /// <summary>
        /// Gets or sets the value of the SignedBy requisite.
        /// </summary>
        public string SignedBy { get; set; }
        /// <summary>
        /// Gets or sets the value of the Comment requisite.
        /// </summary>
        public string Comment { get; set; }
        public List<ShipmentReferenceTrackingCustomProperties> CustomProperties { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ShipmentReference1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TrackingEvent Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TrackingEvent
    {
        public List<TrackingEventCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TrackingEventCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TrackingEventCustomProperty
    {
        /// <summary>
        /// Represents an object of the TrackingEvent Business Logic Entity.
        /// </summary>
        public TrackingEvent TrackingEvent { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string TrackingEvent1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ShipmentReferenceTrackingCustomProperties Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ShipmentReferenceTrackingCustomProperties
    {
        /// <summary>
        /// Represents an object of the ShipmentReferenceTracking Business Logic Entity.
        /// </summary>
        public ShipmentReferenceTracking ShipmentReferenceTracking { get; set; }
        /// <summary>
        /// Gets or sets the value of the Name requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Gets or sets the value of the Value requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ShipmentReferenceTracking1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderType
    {
        public List<CustomerOrderTypeCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryKeyExpression requisite.
        /// Each expression starts from a  object.
        /// </summary>
        public string DeliveryKeyExpression { get; set; }
        /// <summary>
        /// Gets or sets the value of the PackingDeliveryKeyExpression requisite.
        /// Each expression starts from a  object.
        /// </summary>
        public string PackingDeliveryKeyExpression { get; set; }
        /// <summary>
        /// Gets or sets the value of the ItemPieceTime requisite.
        /// </summary>
        public decimal? ItemPieceTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderLineTime requisite.
        /// </summary>
        public decimal? OrderLineTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderTime requisite.
        /// </summary>
        public decimal? OrderTime { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the RestOrderHandling requisite.
        /// </summary>
        public bool? RestOrderHandling { get; set; }
        /// <summary>
        /// Gets or sets the value of the ItemConsolidation requisite.
        /// </summary>
        public bool? ItemConsolidation { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowPickingOfFullLoadCarriersInBuffer requisite.
        /// This requisite is optional.
        /// </summary>
        public bool? AllowPickingOfFullLoadCarriersInBuffer { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Possible standard values:
        /// - 'HANDDATOR' = Handdator
        /// - 'MONTAGE' = Montage
        /// - 'NORMAL' = Normal
        /// - 'RUSH' = Rush
        /// - 'VOICE_FÖRPACKAT' = Voice Förpackat
        /// - 'VOICE_LÖSGODIS' = Voice Lösgodis
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents the custom properties of the customer order type.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderTypeCustomProperty
    {
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType CustomerOrderType { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrderType1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderDeliveryToPackingMaterialQuantity Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryToPackingMaterialQuantity
    {
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery CustomerOrderDelivery { get; set; }
        /// <summary>
        /// Represents an object of the PackingMaterial Business Logic Entity.
        /// </summary>
        public PackingMaterial PackingMaterial { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains all information about delivery that was made to some particular client
    /// at the point of time when it was made.
    /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryWarehouseOrderGroups
    {
        public List<WarehouseOrderGroup> WarehouseOrderGroup { get; set; }
        public List<CustomerOrderDeliveryToWarehouseOrderGroup> CustomerOrderDeliveryToWarehouseOrderGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderDeliveryToWarehouseOrderGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryToWarehouseOrderGroup
    {
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery CustomerOrderDelivery { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderGroup Business Logic Entity.
        /// </summary>
        public WarehouseOrderGroup WarehouseOrderGroup { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrderDelivery1 { get; set; }
        public string WarehouseOrderGroup1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Entity used for testing purposes.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderCause
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDeliveryCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineDeliveryCustomProperty
    {
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerOrderLineDelivery CustomerOrderLineDelivery { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrderLineDelivery1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DispositionLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DispositionLine
    {
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer Customer { get; set; }
        /// <summary>
        /// Categories of customers.
        /// </summary>
        public CustomerCategory CustomerCategory { get; set; }
        /// <summary>
        /// Represents an object of the Disposition Business Logic Entity.
        /// </summary>
        public Disposition Disposition { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemGroup Business Logic Entity.
        /// </summary>
        public ItemGroup ItemGroup { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the QuantityPercentage requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? QuantityPercentage { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Disposition Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Disposition
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowPartialDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Represents an object of the DispositionType Business Logic Entity.
        /// </summary>
        public DispositionType DispositionType { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderText requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the OrderType Business Logic Entity.
        /// </summary>
        public OrderType OrderType { get; set; }
        /// <summary>
        /// Gets or sets the value of the OurReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PriceList Business Logic Entity.
        /// </summary>
        public PriceList PriceList { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan SalesMan { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Gets or sets the value of the YourReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string YourReference { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DispositionType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DispositionType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDeliveryText Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineDeliveryText
    {
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerOrderLineDelivery CustomerOrderLineDelivery { get; set; }
        /// <summary>
        /// Gets the value of the TextLines requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList TextLines { get; set; }
        /// <summary>
        /// Gets or sets the value of the TextPosition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string TextPosition { get; set; }
        /// <summary>
        /// Represents an object of the TextType Business Logic Entity.
        /// </summary>
        public TextType TextType { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineDeliveryItemPropertyValues
    {
        public List<ItemPropertyValue> ItemPropertyValue { get; set; }
        public List<CustomerOrderLineDeliveryToItemPropertyValue> CustomerOrderLineDeliveryToItemPropertyValue { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDeliveryToItemPropertyValue Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineDeliveryToItemPropertyValue
    {
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerOrderLineDelivery CustomerOrderLineDelivery { get; set; }
        /// <summary>
        /// Represents an object of the ItemPropertyValue Business Logic Entity.
        /// </summary>
        public ItemPropertyValue ItemPropertyValue { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Reservation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Reservation
    {
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine CustomerOrderLine { get; set; }
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine Target_CustomerReturnLine { get; set; }
        /// <summary>
        /// Represents an object of the ProductionOrderLine Business Logic Entity.
        /// </summary>
        public ProductionOrderLine Target_ProductionOrderLine { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine Target_PurchaseOrderLine { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the Priority requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Target_CustomerReturnLine1 { get; set; }
        public string Target_ProductionOrderLine1 { get; set; }
        public string Target_PurchaseOrderLine1 { get; set; }
        public string CustomerOrderLine1 { get; set; }
        public string Item1 { get; set; }
        public string ItemFifo1 { get; set; }
        public string LoadCarrier1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents custom texts associated with the customer order line.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderLineText
    {
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine CustomerOrderLine { get; set; }
        /// <summary>
        /// Position of the text record among others.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string TextPosition { get; set; }
        /// <summary>
        /// Represents an object of the TextType Business Logic Entity.
        /// </summary>
        public TextType TextType { get; set; }
        /// <summary>
        /// Content of the customer order line text.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList TextLines { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrderLine1 { get; set; }
        public string TextPosition1 { get; set; }
        public string TextType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents custom texts associated with the customer order.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderText
    {
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        /// <summary>
        /// Position of the text record among others.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string TextPosition { get; set; }
        /// <summary>
        /// Represents an object of the TextType Business Logic Entity.
        /// </summary>
        public TextType TextType { get; set; }
        /// <summary>
        /// Content of the customer order line text.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList TextLines { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrder1 { get; set; }
        public string TextPosition1 { get; set; }
        public string TextType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Describes order for the list of items made by some particular customer out of warehouse.
    /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
    /// Although it is used throughout entire outbound process including picking and packing.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerOrderDeliveryWayOptions
    {
        public List<DeliveryWayOption> DeliveryWayOption { get; set; }
        public List<CustomerOrderToDeliveryWayOption> CustomerOrderToDeliveryWayOption { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class CustomerOrderAmount
    {
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        public CustomerOrderAmountType CustomerOrderAmountType { get; set; }
        public decimal? Amount { get; set; }
        public decimal? VATAmount { get; set; }
        public decimal? VAT { get; set; }
        public decimal? TotalAmount { get; set; }
        public string Reference { get; set; }
        public string Position { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerOrder1 { get; set; }
        public string CustomerOrderAmountType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    [DebuggerStepThrough]
    public partial class CustomerOrderAmountType
    {
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Possible standard values:
        /// - 'COD' = Cash On Delivery
        /// 
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnCustomProperty
    {
        /// <summary>
        /// Contains head information about customer return.
        /// </summary>
        public CustomerReturn CustomerReturn { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturn1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineCustomProperty
    {
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine CustomerReturnLine { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturnLine1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineReturnedQuantity Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineReturnedQuantity
    {
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine CustomerReturnLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the ReturnCause Business Logic Entity.
        /// </summary>
        public ReturnCause ReturnCause { get; set; }
        public List<CustomerReturnLineReturnedQuantityCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine NewCustomerOrderLine { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ReturnCause Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ReturnCause
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the ReturnCauseContext Business Logic Entity.
        /// </summary>
        public ReturnCauseContext Context { get; set; }
        /// <summary>
        /// Gets or sets the value of the ClientReturnCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ClientReturnCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the CreateNewDeliveryNewItem requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? CreateNewDeliveryNewItem { get; set; }
        /// <summary>
        /// Gets or sets the value of the CreateNewDeliverySameItem requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? CreateNewDeliverySameItem { get; set; }
        /// <summary>
        /// Gets or sets the value of the CreateReturnToSupplier requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='True'
        /// </summary>
        public bool? CreateReturnToSupplier { get; set; }
        public List<ReturnCauseCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ReturnCauseContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ReturnCauseContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ReturnCauseCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ReturnCauseCustomProperty
    {
        /// <summary>
        /// Represents an object of the ReturnCause Business Logic Entity.
        /// </summary>
        public ReturnCause ReturnCause { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string ReturnCause1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineReturnedQuantityCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineReturnedQuantityCustomProperty
    {
        /// <summary>
        /// Represents an object of the CustomerReturnLineReturnedQuantity Business Logic Entity.
        /// </summary>
        public CustomerReturnLineReturnedQuantity CustomerReturnLineReturnedQuantity { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturnLineReturnedQuantity1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineText Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineText
    {
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine CustomerReturnLine { get; set; }
        /// <summary>
        /// Gets the value of the TextLines requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList TextLines { get; set; }
        /// <summary>
        /// Gets or sets the value of the TextPosition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string TextPosition { get; set; }
        /// <summary>
        /// Represents an object of the TextType Business Logic Entity.
        /// </summary>
        public TextType TextType { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemStructure Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemStructure
    {
        /// <summary>
        /// Gets the value of the Instructions requisite.
        /// 
        /// Mandatory
        /// </summary>
        public StringList Instructions { get; set; }
        /// <summary>
        /// Represents an object of the ItemStructureType Business Logic Entity.
        /// </summary>
        public ItemStructureType ItemStructureType { get; set; }
        public ItemStructureItems Items { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemStructureType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemStructureType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemStructure Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemStructureItems
    {
        public List<Item> Item { get; set; }
        public List<ItemStructureToItem> ItemStructureToItem { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the BizItemStructureToItem Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemStructureToItem
    {
        /// <summary>
        /// Gets the value of the Instructions requisite.
        /// 
        /// Mandatory
        /// </summary>
        public StringList Instructions { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsQuantityDependent requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsQuantityDependent { get; set; }
        /// <summary>
        /// Represents an object of the ItemStructure Business Logic Entity.
        /// </summary>
        public ItemStructure ItemStructure { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the QuantityDenominator requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string QuantityDenominator { get; set; }
        /// <summary>
        /// Gets or sets the value of the QuantityNumerator requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public string QuantityNumerator { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string SortOrder { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string ItemStructure1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about single item (good).
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemItemSubstitutions
    {
        public List<Item> Item { get; set; }
        public List<ItemSubstitution> ItemSubstitution { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemSubstitution Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemSubstitution
    {
        /// <summary>
        /// Represents an object of the ItemSubstitutionContext Business Logic Entity.
        /// </summary>
        public ItemSubstitutionContext Context { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item FromItem { get; set; }
        /// <summary>
        /// Represents an object of the ItemSubstitutionType Business Logic Entity.
        /// </summary>
        public ItemSubstitutionType ItemSubstitutionType { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item ToItem { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Context1 { get; set; }
        public string FromItem1 { get; set; }
        public string ItemSubstitutionType1 { get; set; }
        public string ToItem1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemSubstitutionContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemSubstitutionContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemSubstitutionType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemSubstitutionType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemValuationSubstitutionLookupMode Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemValuationSubstitutionLookupMode
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the WorkFlowName requisite.
        /// 
        /// Mandatory
        /// </summary>
        public string WorkFlowName { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemTaxCode Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemTaxCode
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemValuationType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemValuationType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about single item (good).
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemLocations
    {
        public List<Location> Location { get; set; }
        public List<DefaultItemToLocation> DefaultItemToLocation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the DefaultItemToLocation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class DefaultItemToLocation
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Gets or sets the value of the ReplenishmentLevel requisite.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? ReplenishmentLevel { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Location1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PriceItemGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PriceItemGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SupplierItemCode Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SupplierItemCode
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        public string SupplierItemCode1 { get; set; }
        /// <summary>
        /// Gets or sets the value of the LeadDeliveryTime requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string LeadDeliveryTime { get; set; }
        /// <summary>
        /// Gets or sets the value of the PurchasePrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PurchasePrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the OptimalPurchaseQuantity requisite.
        /// </summary>
        public decimal? OptimalPurchaseQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the OptimalPurchaseQuantity requisite.
        /// </summary>
        public bool? PreferredSupplier { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Supplier1 { get; set; }
        public string SupplierItemCode2 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemVariant Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemVariant
    {
        /// <summary>
        /// Represents an object of the VariantValue Business Logic Entity.
        /// </summary>
        public VariantValue Value { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Value1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the VariantValue Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class VariantValue
    {
        /// <summary>
        /// Represents an object of the VariantContext Business Logic Entity.
        /// </summary>
        public VariantContext Context { get; set; }
        /// <summary>
        /// Gets the value of the Name requisite.
        /// </summary>
        public MultilingualText Name { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string SortOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the Value requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Context1 { get; set; }
        public string Value1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about single item (good).
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemItemPropertyToOperations
    {
        public List<ItemPropertyToOperation> ItemPropertyToOperation { get; set; }
        public List<ItemToItemPropertyToOperation> ItemToItemPropertyToOperation { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemPropertyToItemPropertyTypeSet Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemPropertyToOperation
    {
        /// <summary>
        /// Represents an object of the ItemProperty Business Logic Entity.
        /// </summary>
        public ItemProperty ItemProperty { get; set; }
        /// <summary>
        /// Represents an object of the Operation Business Logic Entity.
        /// </summary>
        public Operation Operation { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsMandatory requisite.
        /// </summary>
        public bool? IsMandatory { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderIndex requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string OrderIndex { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsQuantityDependent requisite.
        /// </summary>
        public bool? IsQuantityDependent { get; set; }
        /// <summary>
        /// Gets or sets the value of the CheckForExistance requisite.
        /// </summary>
        public bool? CheckForExistance { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemToItemPropertyToOperation Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemToItemPropertyToOperation
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemPropertyToItemPropertyTypeSet Business Logic Entity.
        /// </summary>
        public ItemPropertyToOperation ItemPropertyToOperation { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents item texts associated with the item.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemText
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemTextContext Business Logic Entity.
        /// </summary>
        public ItemTextContext Context { get; set; }
        /// <summary>
        /// Represents an object of the ItemTextType Business Logic Entity.
        /// </summary>
        public ItemTextType Type { get; set; }
        /// <summary>
        /// Gets the value of the Text requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public MultilingualText Text { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Item1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemTextContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemTextContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemTextType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemTextType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemDocument Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemDocument
    {
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemDocumentContext Business Logic Entity.
        /// </summary>
        public ItemDocumentContext Context { get; set; }
        /// <summary>
        /// Gets or sets the value of the Document requisite.
        /// </summary>
        public byte[] Document { get; set; }
        /// <summary>
        /// Gets or sets the value of the DocumentType requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string DocumentType { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Item1 { get; set; }
        public string Context1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the ItemDocumentContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemDocumentContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about single item (good).
    /// </summary>
    [DebuggerStepThrough]
    public partial class ItemPickingZones
    {
        public List<PickingZone> PickingZone { get; set; }
        public List<ItemToPickingZone> ItemToPickingZone { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentTypeCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentTypeCustomProperty
    {
        /// <summary>
        /// Represents an object of the EquipmentType Business Logic Entity.
        /// </summary>
        public EquipmentType EquipmentType { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string EquipmentType1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentTypeErgonomicses
    {
        public List<Ergonomics> Ergonomics { get; set; }
        public List<EquipmentTypeToErgonomics> EquipmentTypeToErgonomics { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Ergonomics Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Ergonomics
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentToErgonomics Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentTypeToErgonomics
    {
        /// <summary>
        /// Represents an object of the EquipmentType Business Logic Entity.
        /// </summary>
        public EquipmentType EquipmentType { get; set; }
        /// <summary>
        /// Represents an object of the Ergonomics Business Logic Entity.
        /// </summary>
        public Ergonomics Ergonomics { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the EquipmentColor Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class EquipmentColor
    {
        /// <summary>
        /// Gets or sets the value of the Color requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Color { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Color1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Location Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LocationErgonomicses
    {
        public List<Ergonomics> Ergonomics { get; set; }
        public List<LocationToErgonomics> LocationToErgonomics { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LocationToErgonomics Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LocationToErgonomics
    {
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Represents an object of the Ergonomics Business Logic Entity.
        /// </summary>
        public Ergonomics Ergonomics { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LocationSubtype Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LocationSubtype
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LocationType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LocationType
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsChaotic requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsChaotic { get; set; }
        /// <summary>
        /// Gets or sets the value of the PickingInstruction requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string PickingInstruction { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the LocationPickingZoneSortOrder Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class LocationPickingZoneSortOrder
    {
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Represents an object of the PickingZone Business Logic Entity.
        /// </summary>
        public PickingZone PickingZone { get; set; }
        /// <summary>
        /// Gets or sets the value of the SortOrder requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string SortOrder { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Location1 { get; set; }
        public string PickingZone1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Cell Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CellPoints
    {
        public List<Point> Point { get; set; }
        public List<CellToPoint> CellToPoint { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Point Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Point
    {
        /// <summary>
        /// Gets or sets the value of the X coordinate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string X { get; set; }
        /// <summary>
        /// Gets or sets the value of the Y coordinate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Y { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CellToPoint Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CellToPoint
    {
        /// <summary>
        /// Represents an object of the Cell Business Logic Entity.
        /// </summary>
        public Cell Cell { get; set; }
        /// <summary>
        /// Represents an object of the Point Business Logic Entity.
        /// </summary>
        public Point Point { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CellCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CellCustomProperty
    {
        /// <summary>
        /// Represents an object of the Cell Business Logic Entity.
        /// </summary>
        public Cell Cell { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Cell1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Section Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SectionPoints
    {
        public List<Point> Point { get; set; }
        public List<SectionToPoint> SectionToPoint { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SectionToPoint Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SectionToPoint
    {
        /// <summary>
        /// Represents an object of the Section Business Logic Entity.
        /// </summary>
        public Section Section { get; set; }
        /// <summary>
        /// Represents an object of the Point Business Logic Entity.
        /// </summary>
        public Point Point { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the SectionCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class SectionCustomProperty
    {
        /// <summary>
        /// Represents an object of the Section Business Logic Entity.
        /// </summary>
        public Section Section { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Section1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Aisle Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class AislePoints
    {
        public List<Point> Point { get; set; }
        public List<AisleToPoint> AisleToPoint { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the AisleToPoint Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class AisleToPoint
    {
        /// <summary>
        /// Represents an object of the Aisle Business Logic Entity.
        /// </summary>
        public Aisle Aisle { get; set; }
        /// <summary>
        /// Represents an object of the Point Business Logic Entity.
        /// </summary>
        public Point Point { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the AisleCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class AisleCustomProperty
    {
        /// <summary>
        /// Represents an object of the Aisle Business Logic Entity.
        /// </summary>
        public Aisle Aisle { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Aisle1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the StorageArea Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class StorageAreaPoints
    {
        public List<Point> Point { get; set; }
        public List<StorageAreaToPoint> StorageAreaToPoint { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the StorageAreaToPoint Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class StorageAreaToPoint
    {
        /// <summary>
        /// Represents an object of the StorageArea Business Logic Entity.
        /// </summary>
        public StorageArea StorageArea { get; set; }
        /// <summary>
        /// Represents an object of the Point Business Logic Entity.
        /// </summary>
        public Point Point { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the StorageAreaCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class StorageAreaCustomProperty
    {
        /// <summary>
        /// Represents an object of the StorageArea Business Logic Entity.
        /// </summary>
        public StorageArea StorageArea { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string StorageArea1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Logical group of the clients. Used to perform operations for several clients at once (for instance picking).
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientGroup
    {
        public ClientGroupClients Clients { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Logical group of the clients. Used to perform operations for several clients at once (for instance picking).
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientGroupClients
    {
        /// <summary>
        /// Clients that belong to the current group.
        /// </summary>
        public List<Client> Client { get; set; }
        /// <summary>
        /// Clients that belong to the current group.
        /// </summary>
        public List<ClientToClientGroup> ClientToClientGroup { get; set; }
    }
    
    /// <summary>
    /// Connects client with client group.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientToClientGroup
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Logical group of the clients. Used to perform operations for several clients at once (for instance picking).
        /// </summary>
        public ClientGroup ClientGroup { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the User Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserCustomers
    {
        public List<Customer> Customer { get; set; }
        public List<UserToCustomer> UserToCustomer { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserToCustomer Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserToCustomer
    {
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer Customer { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the User Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserSuppliers
    {
        public List<Supplier> Supplier { get; set; }
        public List<UserToSupplier> UserToSupplier { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserToSupplier Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserToSupplier
    {
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the User Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserChildUsers
    {
        public List<User> User { get; set; }
        public List<UserToUser> UserToUser { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserToUser Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserToUser
    {
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ParentUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the User Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserUserGroups
    {
        public List<UserGroup> UserGroup { get; set; }
        public List<UserToUserGroup> UserToUserGroup { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserGroup
    {
        /// <summary>
        /// Represents an object of the UserGroup Business Logic Entity.
        /// </summary>
        public UserGroup ParentUserGroup { get; set; }
        /// <summary>
        /// Defines where the user group comes from (NYCE/LDAP/etc)
        /// </summary>
        public string Origin { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserToUserGroup Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserToUserGroup
    {
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Represents an object of the UserGroup Business Logic Entity.
        /// </summary>
        public UserGroup UserGroup { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string User1 { get; set; }
        public string UserGroup1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the User Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserUserRoles
    {
        public List<UserRole> UserRole { get; set; }
        public List<UserToUserRole> UserToUserRole { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserRole Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserRole
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Represents an object of the UserRoleContext Business Logic Entity.
        /// </summary>
        public UserRoleContext Context { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserRoleContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserRoleContext
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the UserToUserRole Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserToUserRole
    {
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Represents an object of the UserRole Business Logic Entity.
        /// </summary>
        public UserRole UserRole { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Contains information about contact person.
    /// </summary>
    [DebuggerStepThrough]
    public partial class UserPassword
    {
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Type of the password.
        /// 
        /// Mandatory
        /// </summary>
        public string Type { get; set; }
        /// <summary>
        /// Value of the password.
        /// 
        /// Mandatory
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string User1 { get; set; }
        public string Type1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the AddressType Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class AddressType
    {
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnDelivery Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnDelivery
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax AdministrationFeeTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowPartialDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        public Currency Currency { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder CustomerOrder { get; set; }
        public List<CustomerReturnDeliveryCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer DeliveryCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryCustomerAddress { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryCustomerName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string DeliveryCustomerName { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryCustomerNotificationEdiCode requisite.
        /// </summary>
        public string DeliveryCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryTermDescription requisite.
        /// </summary>
        public string DeliveryTermDescription { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveryWayDescription requisite.
        /// </summary>
        public string DeliveryWayDescription { get; set; }
        /// <summary>
        /// Gets or sets the value of the DocumentCode requisite.
        /// </summary>
        public string DocumentCode { get; set; }
        /// <summary>
        /// Gets or sets the value of the DocumentNumber requisite.
        /// </summary>
        public string DocumentNumber { get; set; }
        /// <summary>
        /// Gets or sets the value of the DueDate requisite.
        /// </summary>
        public System.DateTime? DueDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightCostPartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightCostPartialDeliveryFlag { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax FreightCostTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightPaidByReceiverFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? FreightPaidByReceiverFlag { get; set; }
        /// <summary>
        /// Gets or sets the value of the FreightReference requisite.
        /// </summary>
        public string FreightReference { get; set; }
        /// <summary>
        /// Gets or sets the value of the HandlingFee requisite.
        /// </summary>
        public decimal? HandlingFee { get; set; }
        /// <summary>
        /// Gets or sets the value of the HandlingFeePartialDeliveryFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? HandlingFeePartialDeliveryFlag { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax HandlingFeeTax { get; set; }
        /// <summary>
        /// Gets or sets the value of the ImportDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer InvoiceCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address InvoiceCustomerAddress { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string InvoiceCustomerName { get; set; }
        /// <summary>
        /// Gets or sets the value of the InvoiceCustomerNotificationEdiCode requisite.
        /// </summary>
        public string InvoiceCustomerNotificationEdiCode { get; set; }
        /// <summary>
        /// Represents an object of the Language Business Logic Entity.
        /// </summary>
        public Language Language { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        public List<CustomerReturnLineDelivery> Lines { get; set; }
        /// <summary>
        /// Contains information about client's customer.
        /// Customer is the one who orders goods from warehouse.
        /// </summary>
        public Customer OrderCustomer { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address OrderCustomerAddress { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderCustomerName requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderCustomerName { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderText requisite.
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Gets or sets the value of the OurReference requisite.
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Gets or sets the value of the PaymentTermDescription requisite.
        /// </summary>
        public string PaymentTermDescription { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority Priority { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// ??? If its is a geographycal region - why it is not connected to country
        /// </summary>
        public CustomerRegion Region { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Represents an object of the SalesMan Business Logic Entity.
        /// </summary>
        public SalesMan SalesMan { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the UseAdministrationFee requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseAdministrationFee { get; set; }
        /// <summary>
        /// Gets or sets the value of the UseFreightCost requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? UseFreightCost { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Gets or sets the value of the YourReference requisite.
        /// </summary>
        public string YourReference { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User OrderingUser { get; set; }
        public List<Address> Addresses { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnDeliveryCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnDeliveryCustomProperty
    {
        /// <summary>
        /// Represents an object of the CustomerReturnDelivery Business Logic Entity.
        /// </summary>
        public CustomerReturnDelivery CustomerReturnDelivery { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturnDelivery1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineDelivery
    {
        /// <summary>
        /// Represents an object of the CustomerReturnDelivery Business Logic Entity.
        /// </summary>
        public CustomerReturnDelivery CustomerReturnDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the Position requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Gets or sets the value of the Subposition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Gets or sets the value of the AllowPartialDelivery requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? AllowPartialDelivery { get; set; }
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine ReturnLine { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine OriginalCustomerOrderLine { get; set; }
        public List<CustomerReturnLineDeliveryCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredQuantity requisite.
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Represents an object of the Priority Business Logic Entity.
        /// </summary>
        public Priority DeliveryPriority { get; set; }
        /// <summary>
        /// Gets or sets the value of the Discount requisite.
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Gets or sets the value of the DiscountPercent requisite.
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Represents an object of the DispositionLine Business Logic Entity.
        /// </summary>
        public DispositionLine DispositionLine { get; set; }
        /// <summary>
        /// Gets or sets the value of the DueDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DueDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo Fifo { get; set; }
        /// <summary>
        /// Gets or sets the value of the GrossPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? GrossPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the InboundDeliveredQuantity requisite.
        /// </summary>
        public decimal? InboundDeliveredQuantity { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item OriginalItem { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item NewItem { get; set; }
        /// <summary>
        /// Gets the value of the OriginalItemDescription requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList OriginalItemDescription { get; set; }
        /// <summary>
        /// Gets the value of the NewItemDescription requisite.
        /// 
        /// Mandatory
        /// </summary>
        public StringList NewItemDescription { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the LoadingMeters requisite.
        /// </summary>
        public decimal? LoadingMeters { get; set; }
        /// <summary>
        /// Gets or sets the value of the MarketSuggestedRetailPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? MarketSuggestedRetailPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the NetPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? NetPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderQuantity { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit OrderUnit { get; set; }
        /// <summary>
        /// Gets or sets the value of the OriginalQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OriginalQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the PriceExcludingVat requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceExcludingVat { get; set; }
        /// <summary>
        /// Gets or sets the value of the PriceIncludingVat requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? PriceIncludingVat { get; set; }
        /// <summary>
        /// Gets or sets the value of the ProductionDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ProductionDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        public List<CustomerReturnLineDeliveryReturnedQuantity> ReturnedQuantities { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Represents an object of the Tax Business Logic Entity.
        /// </summary>
        public Tax Tax { get; set; }
        /// <summary>
        /// Gets or sets the value of the TaxCode requisite.
        /// </summary>
        public string TaxCode { get; set; }
        /// <summary>
        /// Contains country definition.
        /// </summary>
        public Country TaxCountry { get; set; }
        /// <summary>
        /// Gets or sets the value of the TaxName requisite.
        /// </summary>
        public string TaxName { get; set; }
        /// <summary>
        /// Gets or sets the value of the TaxTaxPercent requisite.
        /// </summary>
        public decimal? TaxTaxPercent { get; set; }
        public List<CustomerReturnLineDeliveryText> Texts { get; set; }
        /// <summary>
        /// Gets or sets the value of the TotalDeliveredQuantity requisite.
        /// </summary>
        public decimal? TotalDeliveredQuantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        /// <summary>
        /// Gets or sets the value of the Volume requisite.
        /// </summary>
        public decimal? Volume { get; set; }
        /// <summary>
        /// Gets or sets the value of the Weight requisite.
        /// </summary>
        public decimal? Weight { get; set; }
        public CustomerReturnLineDeliveryItemPropertyValues ItemPropertyValues { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsAutoDelivered requisite.
        /// </summary>
        public bool? IsAutoDelivered { get; set; }
        /// <summary>
        /// Represents an object of the ReturnCause Business Logic Entity.
        /// </summary>
        public ReturnCause DefaultReturnCause { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturnDelivery1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineDeliveryCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineDeliveryCustomProperty
    {
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerReturnLineDelivery CustomerReturnLineDelivery { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturnLineDelivery1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineDeliveryReturnedQuantity Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineDeliveryReturnedQuantity
    {
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerReturnLineDelivery CustomerReturnLineDelivery { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the ReturnCause Business Logic Entity.
        /// </summary>
        public ReturnCause ReturnCause { get; set; }
        public List<CustomerReturnLineDeliveryReturnedQuantityCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine NewCustomerOrderLine { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineDeliveryReturnedQuantityCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineDeliveryReturnedQuantityCustomProperty
    {
        /// <summary>
        /// Represents an object of the CustomerReturnLineDeliveryReturnedQuantity Business Logic Entity.
        /// </summary>
        public CustomerReturnLineDeliveryReturnedQuantity CustomerReturnLineDeliveryReturnedQuantity { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string CustomerReturnLineDeliveryReturnedQuantity1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineDeliveryText Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineDeliveryText
    {
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerReturnLineDelivery CustomerReturnLineDelivery { get; set; }
        /// <summary>
        /// Gets the value of the TextLines requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList TextLines { get; set; }
        /// <summary>
        /// Gets or sets the value of the TextPosition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string TextPosition { get; set; }
        /// <summary>
        /// Represents an object of the TextType Business Logic Entity.
        /// </summary>
        public TextType TextType { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineDeliveryItemPropertyValues
    {
        public List<ItemPropertyValue> ItemPropertyValue { get; set; }
        public List<CustomerReturnLineDeliveryToItemPropertyValue> CustomerReturnLineDeliveryToItemPropertyValue { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the CustomerReturnLineDeliveryToItemPropertyValue Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class CustomerReturnLineDeliveryToItemPropertyValue
    {
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerReturnLineDelivery CustomerReturnLineDelivery { get; set; }
        /// <summary>
        /// Represents an object of the ItemPropertyValue Business Logic Entity.
        /// </summary>
        public ItemPropertyValue ItemPropertyValue { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseReturn Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseReturn
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public Currency Currency { get; set; }
        public List<PurchaseReturnCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DebitedDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DebitedDate { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredItemsQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredItemsQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredPackagesQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPackagesQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredPalletQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPalletQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredVolume { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredWeight { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryAddress { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Gets or sets the value of the DutyFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? DutyFlag { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the ImportDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        public List<PurchaseReturnLine> Lines { get; set; }
        /// <summary>
        /// Gets or sets the value of the Marking requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Marking { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfItems requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfItems { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfPackages requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPackages { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfPallets requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPallets { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedVolume { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedWeight { get; set; }
        /// <summary>
        /// Gets the value of the NumberOfDamagedUnits requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NumberOfDamagedUnits { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderText requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseOrderType Business Logic Entity.
        /// </summary>
        public PurchaseOrderType OrderType { get; set; }
        /// <summary>
        /// Gets or sets the value of the OurReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Contains information about purchaser who works with some of suppliers.
        /// </summary>
        public Purchaser Purchaser { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder ReferencedOrder_PurchaseOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShipmentDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ShipmentDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Gets or sets the value of the YourReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string YourReference { get; set; }
        public List<Address> Addresses { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseReturnCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseReturnCustomProperty
    {
        /// <summary>
        /// Represents an object of the PurchaseReturn Business Logic Entity.
        /// </summary>
        public PurchaseReturn PurchaseReturn { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseReturn1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseReturnLine Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseReturnLine
    {
        /// <summary>
        /// Represents an object of the PurchaseReturn Business Logic Entity.
        /// </summary>
        public PurchaseReturn PurchaseReturn { get; set; }
        /// <summary>
        /// Gets or sets the value of the Position requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Position { get; set; }
        /// <summary>
        /// Gets or sets the value of the Subposition requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string Subposition { get; set; }
        /// <summary>
        /// Defines crossdocking operation.
        /// </summary>
        public CrossDocking CrossDocking { get; set; }
        public Currency Currency { get; set; }
        public List<PurchaseReturnLineCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets the value of the DateOfNotification requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DateOfNotification { get; set; }
        /// <summary>
        /// Gets or sets the value of the DeliveredQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? DeliveredQuantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the Discount requisite.
        /// </summary>
        public decimal? Discount { get; set; }
        /// <summary>
        /// Gets or sets the value of the DiscountPercent requisite.
        /// </summary>
        public decimal? DiscountPercent { get; set; }
        /// <summary>
        /// Gets or sets the value of the EdiMessageId requisite.
        /// </summary>
        public string EdiMessageId { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the GrossPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? GrossPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the IsCustomsItem requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? IsCustomsItem { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        /// <summary>
        /// Gets the value of the LineDescription requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList LineDescription { get; set; }
        /// <summary>
        /// Gets or sets the value of the NetPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? NetPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDiscount requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderDiscount { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDiscountPercent requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderDiscountPercent { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderGrossPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderGrossPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderNetPrice requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderNetPrice { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OrderQuantity { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit OrderUnit { get; set; }
        /// <summary>
        /// Gets or sets the value of the OriginalQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? OriginalQuantity { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShipmentDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ShipmentDate { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the SupplierItemCode requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string SupplierItemCode { get; set; }
        /// <summary>
        /// Represents an object of the ItemUnit Business Logic Entity.
        /// </summary>
        public ItemUnit Unit { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine PurchaseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the ReturnCause Business Logic Entity.
        /// </summary>
        public ReturnCause ReturnCause { get; set; }
        /// <summary>
        /// Gets or sets the value of the DueDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DueDate { get; set; }
        public List<PurchaseReturnLineText> Texts { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseReturn1 { get; set; }
        public string Position1 { get; set; }
        public string Subposition1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseReturnLineCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseReturnLineCustomProperty
    {
        /// <summary>
        /// Represents an object of the PurchaseReturnLine Business Logic Entity.
        /// </summary>
        public PurchaseReturnLine PurchaseReturnLine { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseReturnLine1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents custom texts associated with the purchase return line.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseReturnLineText
    {
        /// <summary>
        /// Represents an object of the PurchaseReturnLine Business Logic Entity.
        /// </summary>
        public PurchaseReturnLine PurchaseReturnLine { get; set; }
        /// <summary>
        /// Position of the text record among others.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string TextPosition { get; set; }
        /// <summary>
        /// Represents an object of the TextType Business Logic Entity.
        /// </summary>
        public TextType TextType { get; set; }
        /// <summary>
        /// Content of the customer order line text.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public StringList TextLines { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseReturnLine1 { get; set; }
        public string TextPosition1 { get; set; }
        public string TextType1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseReturnDelivery Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseReturnDelivery
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Number requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string Number { get; set; }
        /// <summary>
        /// Describes external carrier.
        /// </summary>
        public Carrier Carrier { get; set; }
        public Currency Currency { get; set; }
        public List<PurchaseReturnDeliveryCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Gets or sets the value of the DebitedDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? DebitedDate { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredItemsQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredItemsQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredPackagesQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPackagesQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredPalletQuantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string DeliveredPalletQuantity { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredVolume { get; set; }
        /// <summary>
        /// Gets the value of the DeliveredWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? DeliveredWeight { get; set; }
        /// <summary>
        /// Represents address.
        /// Address should always have Owner. Generally it should not be an entity.
        /// We have to avoid produce new objects without Owner and treat these cases like a bugs.
        /// </summary>
        public Address DeliveryAddress { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryTerm Business Logic Entity.
        /// </summary>
        public DeliveryTerm DeliveryTerm { get; set; }
        /// <summary>
        /// Represents an object of the DeliveryWay Business Logic Entity.
        /// </summary>
        public DeliveryWay DeliveryWay { get; set; }
        /// <summary>
        /// Gets or sets the value of the DutyFlag requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='False'
        /// </summary>
        public bool? DutyFlag { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Gets or sets the value of the ImportDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ImportDate { get; set; }
        /// <summary>
        /// Gets the value of the LastDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? LastDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the Marking requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string Marking { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfItems requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfItems { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfPackages requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPackages { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedNumberOfPallets requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NotifiedNumberOfPallets { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedVolume requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedVolume { get; set; }
        /// <summary>
        /// Gets the value of the NotifiedWeight requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public double? NotifiedWeight { get; set; }
        /// <summary>
        /// Gets the value of the NumberOfDamagedUnits requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public string NumberOfDamagedUnits { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the OrderText requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OrderText { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderType Business Logic Entity.
        /// </summary>
        public CustomerOrderType OrderType { get; set; }
        /// <summary>
        /// Gets or sets the value of the OurReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string OurReference { get; set; }
        /// <summary>
        /// Represents an object of the PaymentTerm Business Logic Entity.
        /// </summary>
        public PaymentTerm PaymentTerm { get; set; }
        /// <summary>
        /// Represents an object of the PickingZoneFlow Business Logic Entity.
        /// </summary>
        public PickingZoneFlow PickingZoneFlow { get; set; }
        /// <summary>
        /// Contains information about purchaser who works with some of suppliers.
        /// </summary>
        public Purchaser Purchaser { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder ReferencedOrder_PurchaseOrder { get; set; }
        /// <summary>
        /// Represents an object of the PurchaseReturn Business Logic Entity.
        /// </summary>
        public PurchaseReturn ReferencedOrder_PurchaseReturn { get; set; }
        /// <summary>
        /// Gets or sets the value of the RequestedDeliveryDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? RequestedDeliveryDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShipmentDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? ShipmentDate { get; set; }
        /// <summary>
        /// Gets or sets the value of the ShipmentId requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string ShipmentId { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Status { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status Substatus { get; set; }
        /// <summary>
        /// Supplier of the goods.
        /// </summary>
        public Supplier Supplier { get; set; }
        /// <summary>
        /// Represents an object of the Warehouse Business Logic Entity.
        /// </summary>
        public Warehouse Warehouse { get; set; }
        /// <summary>
        /// Gets or sets the value of the YourReference requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default=''
        /// </summary>
        public string YourReference { get; set; }
        public List<Address> Addresses { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Number1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the PurchaseReturnDeliveryCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class PurchaseReturnDeliveryCustomProperty
    {
        /// <summary>
        /// Represents an object of the PurchaseReturnDelivery Business Logic Entity.
        /// </summary>
        public PurchaseReturnDelivery PurchaseReturnDelivery { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string PurchaseReturnDelivery1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Currency of the client.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientCurrency
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public Currency Currency { get; set; }
        /// <summary>
        /// Date when the properties of the current client currency are set, such as Rate and Factor.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? CurrencyDate { get; set; }
        /// <summary>
        /// Currency rate.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public decimal? CurrencyRate { get; set; }
        /// <summary>
        /// Currency factor.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='1'
        /// </summary>
        public decimal? Factor { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Currency1 { get; set; }
        public string CurrencyDate1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents the custom properties of the client.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientCustomProperty
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Client1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Type of the client. Defines operations set that are allowed for the particular client.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientType
    {
        /// <summary>
        /// Sorting order.
        /// Used to sort client types in UI.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string SortOrder { get; set; }
        /// <summary>
        /// Defines access type of the client. Used to restrict user access to some settings in UI.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public string AccessType { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Decribes client of the warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientGroups
    {
        public List<ClientGroup> ClientGroup { get; set; }
        public List<ClientToClientGroup> ClientToClientGroup { get; set; }
    }
    
    /// <summary>
    /// Decribes client of the warehouse.
    /// </summary>
    [DebuggerStepThrough]
    public partial class ClientWarehouses
    {
        public List<Warehouse> Warehouse { get; set; }
        public List<ClientToWarehouse> ClientToWarehouse { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TransactionTypeContext Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TransactionTypeContext
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        public List<TransactionType> TransactionTypes { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Code { get; set; }
        public MultilingualText Description { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Code1 { get; set; }
        public string Client1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the TransactionCustomProperty Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class TransactionCustomProperty
    {
        /// <summary>
        /// Represents an object of the Transaction Business Logic Entity.
        /// </summary>
        public Transaction Transaction { get; set; }
        /// <summary>
        /// Mandatory
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Mandatory, Default=''
        /// </summary>
        public string Value { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string Transaction1 { get; set; }
        public string Name1 { get; set; }
        public string Disabled1 { get; set; }
        public string template { get; set; }
    }
    
    /// <summary>
    /// Represents an object of the Transaction Business Logic Entity.
    /// </summary>
    [DebuggerStepThrough]
    public partial class Transaction
    {
        /// <summary>
        /// Decribes client of the warehouse.
        /// </summary>
        public Client Client { get; set; }
        /// <summary>
        /// Gets or sets the value of the Comment requisite.
        /// </summary>
        public string Comment { get; set; }
        /// <summary>
        /// Gets or sets the value of the CreationDate requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory
        /// </summary>
        public System.DateTime? CreationDate { get; set; }
        public List<TransactionCustomProperty> CustomProperties { get; set; }
        /// <summary>
        /// Represents an object of the Status Business Logic Entity.
        /// </summary>
        public Status EdiStatus { get; set; }
        /// <summary>
        /// Contains information about single item (good).
        /// </summary>
        public Item Item { get; set; }
        /// <summary>
        /// Represents an object of the ItemFifo Business Logic Entity.
        /// </summary>
        public ItemFifo ItemFifo { get; set; }
        /// <summary>
        /// Represents an object of the LoadCarrier Business Logic Entity.
        /// </summary>
        public LoadCarrier LoadCarrier { get; set; }
        /// <summary>
        /// Represents an object of the Location Business Logic Entity.
        /// </summary>
        public Location Location { get; set; }
        /// <summary>
        /// Contains all information about single customer order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public CustomerOrderLine Object_CustomerOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the CustomerOrderLineDelivery Business Logic Entity.
        /// </summary>
        public CustomerOrderLineDelivery Object_CustomerOrderLineDelivery { get; set; }
        /// <summary>
        /// Contains information about each returned position under corresponding customer return.
        /// </summary>
        public CustomerReturnLine Object_CustomerReturnLine { get; set; }
        /// <summary>
        /// Represents an object of the NotificationLine Business Logic Entity.
        /// </summary>
        public NotificationLine Object_NotificationLine { get; set; }
        /// <summary>
        /// Represents an object of the ProductionOrderLine Business Logic Entity.
        /// </summary>
        public ProductionOrderLine Object_ProductionOrderLine { get; set; }
        /// <summary>
        /// Contains all information about single purchase order position (line), such as item, fifo, quantity, etc.
        /// </summary>
        public PurchaseOrderLine Object_PurchaseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine Object_WarehouseOrderLine { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular customer out of warehouse.
        /// It initiates the outbound process and is mainly used in customer order picking proposal and integration.
        /// Although it is used throughout entire outbound process including picking and packing.
        /// </summary>
        public CustomerOrder Object_CustomerOrder { get; set; }
        /// <summary>
        /// Contains all information about delivery that was made to some particular client
        /// at the point of time when it was made.
        /// Most of the requisites contains copy of the coresponding requisites of the related customer order.
        /// </summary>
        public CustomerOrderDelivery Object_CustomerOrderDelivery { get; set; }
        /// <summary>
        /// Contains head information about customer return.
        /// </summary>
        public CustomerReturn Object_CustomerReturn { get; set; }
        /// <summary>
        /// Represents an object of the Notification Business Logic Entity.
        /// </summary>
        public Notification Object_Notification { get; set; }
        /// <summary>
        /// Represents an object of the ProductionOrder Business Logic Entity.
        /// </summary>
        public ProductionOrder Object_ProductionOrder { get; set; }
        /// <summary>
        /// Describes order for the list of items made by some particular purchaser from one of the suppliers into warehouse.
        /// It initiates the inbound process and is mainly used in unpacking and integration.
        /// </summary>
        public PurchaseOrder Object_PurchaseOrder { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrder Business Logic Entity.
        /// </summary>
        public WarehouseOrder Object_WarehouseOrder { get; set; }
        /// <summary>
        /// Gets or sets the value of the Price requisite.
        /// </summary>
        public decimal? Price { get; set; }
        /// <summary>
        /// Gets or sets the value of the Quantity requisite.
        /// This requisite is mandatory.
        /// 
        /// Mandatory, Default='0'
        /// </summary>
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Represents an object of the TransactionType Business Logic Entity.
        /// </summary>
        public TransactionType TransactionType { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User User { get; set; }
        /// <summary>
        /// Represents an object of the WarehouseOrderLine Business Logic Entity.
        /// </summary>
        public WarehouseOrderLine WarehouseOrderLine { get; set; }
        /// <summary>
        /// Represents an object of the Operation Business Logic Entity.
        /// </summary>
        public Operation Operation { get; set; }
        /// <summary>
        /// Represents an object of the ShipmentReference Business Logic Entity.
        /// </summary>
        public ShipmentReference ShipmentReference { get; set; }
        /// <summary>
        /// Balance on ItemLocation after applying the transaction.
        /// </summary>
        public decimal? BalanceAfterTransaction { get; set; }
        public string Id { get; set; }
        /// <summary>
        /// Mandatory
        /// Read-Only
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User ModificationUser { get; set; }
        /// <summary>
        /// Represents an object of the User Business Logic Entity.
        /// </summary>
        public User UserAdded { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? ModificationDate { get; set; }
        /// <summary>
        /// Mandatory, Default='0'
        /// </summary>
        public string Disabled { get; set; }
        /// <summary>
        /// Read-Only
        /// </summary>
        public System.DateTime? DateAdded { get; set; }
        public string template { get; set; }
    }
}
